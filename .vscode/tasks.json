{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "dev",
      "type": "shell",
      "command": "npx nx run-many -t dev",
      "isBackground": true,
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": {
        "owner": "custom",
        "pattern": [
          {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Starting debugpy for semio engine", // When server starts
          "endsPattern": "Waiting for debugger to attach to semio engine" // When server is ready
        }
      },
      "group": "none",
      "options": {
        "killOnPort": 5678
      }
    },
    {
      "label": "dev engine",
      "type": "shell",
      "command": "npx nx dev @semio/engine",
      "isBackground": true,
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": {
        "owner": "custom",
        "pattern": [
          {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Starting debugpy for semio engine", // When server starts
          "endsPattern": "Waiting for debugger to attach to semio engine" // When server is ready
        }
      },
      "group": "none",
      "options": {
        "killOnPort": 5678
      }
    },
    {
      "label": "dev js",
      "type": "shell",
      "isBackground": true,
      "command": "npx nx dev @semio/js",
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": {
        "owner": "custom",
        "pattern": [
          {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "@storybook/core", // When storybook starts
          "endsPattern": "http://localhost:6006/" // When sotrybook is ready
        }
      },
      "group": "none",
      "options": {
        "killOnPort": 6006
      }
    },
    {
      "label": "dev play",
      "type": "shell",
      "isBackground": true,
      "command": "npx nx dev @semio/play",
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": {
        "owner": "custom",
        "pattern": [
          {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "VITE", // When vite starts
          "endsPattern": "http://localhost:5173/" // When vite is ready
        }
      },
      "group": "none",
      "options": {
        "killOnPort": 5173
      }
    },
    {
      "label": "dev docs",
      "type": "shell",
      "isBackground": true,
      "command": "npx nx dev @semio/docs",
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": {
        "owner": "custom",
        "pattern": [
          {
            "regexp": ".",
            "file": 1,
            "location": 2,
            "message": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "astro", // When astro starts
          "endsPattern": "http://localhost:4321/" // When astro is ready
        }
      },
      "group": "none",
      "options": {
        "killOnPort": 4321
      }
    },
    {
      "label": "build icons",
      "type": "shell",
      "command": "npx nx build @semio/icons"
    },
    {
      "label": "kill dev",
      "type": "shell",
      "windows": {
        // TODO: Find a reliable way to kill all dev tasks
        "command": "",
        "options": {
          "shell": {
            "executable": "powershell.exe",
            "args": [
              "-Command"
            ]
          }
        }
      },
      "presentation": {
        "reveal": "silent",
        "panel": "new",
        "close": true
      },
      "problemMatcher": []
    }
  ]
}