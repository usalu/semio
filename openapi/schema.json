{
    "openapi": "3.1.0",
    "info": {
        "title": "semio REST API",
        "summary": "This is the local rest API of the semio engine.",
        "version": "4.3.0-beta"
    },
    "paths": {
        "/api/kits/{encodedKitUri}": {
            "get": {
                "summary": "Kit",
                "operationId": "kit_kits__encodedKitUri__get",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kit"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create Kit",
                "operationId": "create_kit_kits__encodedKitUri__put",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KitInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Kit",
                "operationId": "delete_kit_kits__encodedKitUri__delete",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/kits/{encodedKitUri}/types/{encodedTypeNameAndVariant}": {
            "put": {
                "summary": "Put Type",
                "operationId": "put_type_kits__encodedKitUri__types__encodedTypeNameAndVariant__put",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    },
                    {
                        "name": "encodedTypeNameAndVariant",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+,[a-zA-Z0-9\\-._~%]*",
                            "title": "Encodedtypenameandvariant"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Type",
                "operationId": "delete_type_kits__encodedKitUri__types__encodedTypeNameAndVariant__delete",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    },
                    {
                        "name": "encodedTypeNameAndVariant",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+,[a-zA-Z0-9\\-._~%]*",
                            "title": "Encodedtypenameandvariant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/kits/{encodedKitUri}/designs/{encodedDesignNameAndVariantAndView}": {
            "put": {
                "summary": "Put Design",
                "operationId": "put_design_kits__encodedKitUri__designs__encodedDesignNameAndVariantAndView__put",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    },
                    {
                        "name": "encodedDesignNameAndVariantAndView",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+,[a-zA-Z0-9\\-._~%]*,[a-zA-Z0-9\\-._~%]*",
                            "title": "Encodeddesignnameandvariantandview"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DesignInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Design",
                "operationId": "delete_design_kits__encodedKitUri__designs__encodedDesignNameAndVariantAndView__delete",
                "parameters": [
                    {
                        "name": "encodedKitUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+",
                            "title": "Encodedkituri"
                        }
                    },
                    {
                        "name": "encodedDesignNameAndVariantAndView",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9\\-._~%]+,[a-zA-Z0-9\\-._~%]*,[a-zA-Z0-9\\-._~%]*",
                            "title": "Encodeddesignnameandvariantandview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assistant/predictDesign": {
            "get": {
                "summary": "Predict Design",
                "operationId": "predict_design_assistant_predictDesign_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_predict_design_assistant_predictDesign_get"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignPrediction"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/prepare/kit": {
            "post": {
                "summary": "Prepare Kit",
                "operationId": "prepare_kit_prepare_kit_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KitInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KitContext"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthorInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the author."
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Email",
                        "description": "\ud83d\udce7 The email of the author."
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "email"
                ],
                "title": "AuthorInput",
                "description": "\ud83d\udc64 The input for an author."
            },
            "Author": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the author."
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Email",
                        "description": "\ud83d\udce7 The email of the author."
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "email"
                ],
                "title": "Author",
                "description": "\ud83d\udcd1 The output of an author."
            },
            "Body_predict_design_assistant_predictDesign_get": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "types": {
                        "items": {
                            "$ref": "#/components/schemas/TypeContext-Input"
                        },
                        "type": "array",
                        "title": "Types"
                    },
                    "design": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DesignContext-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "types"
                ],
                "title": "Body_predict_design_assistant_predictDesign_get"
            },
            "ConnectionContext-Input": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the connection.",
                        "default": ""
                    },
                    "gap": {
                        "type": "number",
                        "title": "Gap",
                        "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                        "default": 0
                    },
                    "shift": {
                        "type": "number",
                        "title": "Shift",
                        "description": "\u2194\ufe0f The optional lateral shift (applied after the rotation, the turn and the tilt in the plane) between the connected and the connecting piece..",
                        "default": 0
                    },
                    "raise_": {
                        "type": "number",
                        "title": "Raise",
                        "description": "\ud83e\ude9c The optional vertical raise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "rotation": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Rotation",
                        "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "turn": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Turn",
                        "description": "\ud83d\udede The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "tilt": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Tilt",
                        "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\u27a1\ufe0f The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\u2b06\ufe0f The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "connected": {
                        "$ref": "#/components/schemas/SideContext",
                        "description": "\ud83e\uddf2 The connected side of the connection."
                    },
                    "connecting": {
                        "$ref": "#/components/schemas/SideContext",
                        "description": "\ud83e\uddf2 The connecting side of the connection."
                    }
                },
                "type": "object",
                "required": [
                    "connected",
                    "connecting"
                ],
                "title": "ConnectionContext",
                "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design."
            },
            "ConnectionContext-": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the connection.",
                        "default": ""
                    },
                    "gap": {
                        "type": "number",
                        "title": "Gap",
                        "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                        "default": 0
                    },
                    "shift": {
                        "type": "number",
                        "title": "Shift",
                        "description": "\u2194\ufe0f The optional lateral shift (applied after the rotation, the turn and the tilt in the plane) between the connected and the connecting piece..",
                        "default": 0
                    },
                    "raise_": {
                        "type": "number",
                        "title": "Raise",
                        "description": "\ud83e\ude9c The optional vertical raise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "rotation": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Rotation",
                        "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "turn": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Turn",
                        "description": "\ud83d\udede The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "tilt": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Tilt",
                        "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\u27a1\ufe0f The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\u2b06\ufe0f The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "connected": {
                        "$ref": "#/components/schemas/SideContext",
                        "description": "\ud83e\uddf2 The connected side of the connection."
                    },
                    "connecting": {
                        "$ref": "#/components/schemas/SideContext",
                        "description": "\ud83e\uddf2 The connecting side of the connection."
                    }
                },
                "type": "object",
                "required": [
                    "connected",
                    "connecting"
                ],
                "title": "ConnectionContext",
                "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design."
            },
            "ConnectionInput": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the connection.",
                        "default": ""
                    },
                    "gap": {
                        "type": "number",
                        "title": "Gap",
                        "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                        "default": 0
                    },
                    "shift": {
                        "type": "number",
                        "title": "Shift",
                        "description": "\u2194\ufe0f The optional lateral shift (applied after the rotation, the turn and the tilt in the plane) between the connected and the connecting piece..",
                        "default": 0
                    },
                    "raise_": {
                        "type": "number",
                        "title": "Raise",
                        "description": "\ud83e\ude9c The optional vertical raise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "rotation": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Rotation",
                        "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "turn": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Turn",
                        "description": "\ud83d\udede The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "tilt": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Tilt",
                        "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\u27a1\ufe0f The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\u2b06\ufe0f The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "connected": {
                        "$ref": "#/components/schemas/SideInput",
                        "description": "\ud83e\uddf2 The connected side of the connection."
                    },
                    "connecting": {
                        "$ref": "#/components/schemas/SideInput",
                        "description": "\ud83e\uddf2 The connecting side of the connection."
                    }
                },
                "type": "object",
                "required": [
                    "connected",
                    "connecting"
                ],
                "title": "ConnectionInput",
                "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design."
            },
            "Connection": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the connection.",
                        "default": ""
                    },
                    "gap": {
                        "type": "number",
                        "title": "Gap",
                        "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                        "default": 0
                    },
                    "shift": {
                        "type": "number",
                        "title": "Shift",
                        "description": "\u2194\ufe0f The optional lateral shift (applied after the rotation, the turn and the tilt in the plane) between the connected and the connecting piece..",
                        "default": 0
                    },
                    "raise_": {
                        "type": "number",
                        "title": "Raise",
                        "description": "\ud83e\ude9c The optional vertical raise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "rotation": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Rotation",
                        "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "turn": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Turn",
                        "description": "\ud83d\udede The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "tilt": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Tilt",
                        "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\u27a1\ufe0f The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\u2b06\ufe0f The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "connected": {
                        "$ref": "#/components/schemas/Side",
                        "description": "\ud83e\uddf2 The connected side of the connection."
                    },
                    "connecting": {
                        "$ref": "#/components/schemas/Side",
                        "description": "\ud83e\uddf2 The connecting side of the connection."
                    }
                },
                "type": "object",
                "required": [
                    "connected",
                    "connecting"
                ],
                "title": "Connection",
                "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design."
            },
            "ConnectionPrediction": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the connection.",
                        "default": ""
                    },
                    "gap": {
                        "type": "number",
                        "title": "Gap",
                        "description": "\u2195\ufe0f The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece. ",
                        "default": 0
                    },
                    "shift": {
                        "type": "number",
                        "title": "Shift",
                        "description": "\u2194\ufe0f The optional lateral shift (applied after the rotation, the turn and the tilt in the plane) between the connected and the connecting piece..",
                        "default": 0
                    },
                    "raise_": {
                        "type": "number",
                        "title": "Raise",
                        "description": "\ud83e\ude9c The optional vertical raise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "rotation": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Rotation",
                        "description": "\ud83d\udd04 The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "turn": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Turn",
                        "description": "\ud83d\udede The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
                        "default": 0
                    },
                    "tilt": {
                        "type": "number",
                        "exclusiveMaximum": 360.0,
                        "minimum": 0.0,
                        "title": "Tilt",
                        "description": "\u2197\ufe0f The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
                        "default": 0
                    },
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\u27a1\ufe0f The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\u2b06\ufe0f The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
                        "default": 0
                    },
                    "connected": {
                        "$ref": "#/components/schemas/SidePrediction",
                        "description": "\ud83e\uddf2 The connected side of the connection."
                    },
                    "connecting": {
                        "$ref": "#/components/schemas/SidePrediction",
                        "description": "\ud83e\uddf2 The connecting side of the connection."
                    }
                },
                "type": "object",
                "required": [
                    "connected",
                    "connecting"
                ],
                "title": "ConnectionPrediction",
                "description": "\ud83d\udd87\ufe0f A bidirectional connection between two pieces of a design."
            },
            "DesignContext-Input": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the design."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the design.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the design. No variant means the default variant.",
                        "default": ""
                    },
                    "view": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "View",
                        "description": "\ud83e\udd7d The optional view of the design. No view means the default view.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The unit of the design.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationContext"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pieces": {
                        "items": {
                            "$ref": "#/components/schemas/PieceContext-Input"
                        },
                        "type": "array",
                        "title": "Pieces"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectionContext-Input"
                        },
                        "type": "array",
                        "title": "Connections"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DesignContext",
                "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected."
            },
            "DesignContext-": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the design."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the design.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the design. No variant means the default variant.",
                        "default": ""
                    },
                    "view": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "View",
                        "description": "\ud83e\udd7d The optional view of the design. No view means the default view.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The unit of the design.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationContext"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pieces": {
                        "items": {
                            "$ref": "#/components/schemas/PieceContext-"
                        },
                        "type": "array",
                        "title": "Pieces"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectionContext-"
                        },
                        "type": "array",
                        "title": "Connections"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DesignContext",
                "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected."
            },
            "DesignInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the design."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the design.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. The image must be at least 256x256 pixels and smaller than 1 MB.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the design. No variant means the default variant.",
                        "default": ""
                    },
                    "view": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "View",
                        "description": "\ud83e\udd7d The optional view of the design. No view means the default view.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The unit of the design.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationInput"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pieces": {
                        "items": {
                            "$ref": "#/components/schemas/PieceInput"
                        },
                        "type": "array",
                        "title": "Pieces"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectionInput"
                        },
                        "type": "array",
                        "title": "Connections"
                    },
                    "authors": {
                        "items": {
                            "$ref": "#/components/schemas/AuthorInput"
                        },
                        "type": "array",
                        "title": "Authors"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DesignInput",
                "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected."
            },
            "Design": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the design."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the design.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. The image must be at least 256x256 pixels and smaller than 1 MB.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the design. No variant means the default variant.",
                        "default": ""
                    },
                    "view": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "View",
                        "description": "\ud83e\udd7d The optional view of the design. No view means the default view.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The unit of the design.",
                        "default": ""
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created",
                        "description": "\ud83d\udd52 The creation date of the design."
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated",
                        "description": "\ud83d\udd52 The last update date of the design."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Location"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pieces": {
                        "items": {
                            "$ref": "#/components/schemas/Piece"
                        },
                        "type": "array",
                        "title": "Pieces"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/components/schemas/Connection"
                        },
                        "type": "array",
                        "title": "Connections"
                    },
                    "authors": {
                        "items": {
                            "$ref": "#/components/schemas/Author"
                        },
                        "type": "array",
                        "title": "Authors"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "Design",
                "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected."
            },
            "DesignPrediction": {
                "properties": {
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the design.",
                        "default": ""
                    },
                    "pieces": {
                        "items": {
                            "$ref": "#/components/schemas/PiecePrediction"
                        },
                        "type": "array",
                        "title": "Pieces"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectionPrediction"
                        },
                        "type": "array",
                        "title": "Connections"
                    }
                },
                "type": "object",
                "title": "DesignPrediction",
                "description": "\ud83c\udfd9\ufe0f A design is a collection of pieces that are connected."
            },
            "DiagramPointContext": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udfc1 The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udfc1 The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y"
                ],
                "title": "DiagramPointContext",
                "description": "\ud83d\udcfa A 2d-point (xy) of integers in screen coordinate system."
            },
            "DiagramPointInput": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udfc1 The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udfc1 The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y"
                ],
                "title": "DiagramPointInput",
                "description": "\ud83d\udcfa A 2d-point (xy) of integers in screen coordinate system."
            },
            "DiagramPoint": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udfc1 The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udfc1 The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y"
                ],
                "title": "DiagramPoint",
                "description": "\ud83d\udcfa A 2d-point (xy) of integers in screen coordinate system."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "KitContext": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the kit."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the kit.",
                        "default": ""
                    },
                    "types": {
                        "items": {
                            "$ref": "#/components/schemas/TypeContext-"
                        },
                        "type": "array",
                        "title": "Types",
                        "description": "\ud83e\udde9 The types of the kit."
                    },
                    "designs": {
                        "items": {
                            "$ref": "#/components/schemas/DesignContext-"
                        },
                        "type": "array",
                        "title": "Designs",
                        "description": "\ud83c\udfd9\ufe0f The designs of the kit."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the kit."
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "KitContext",
                "description": "\ud83d\uddc3\ufe0f A kit is a collection of types and designs."
            },
            "KitInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the kit."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the kit.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. kit.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "preview": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Preview",
                        "description": "\ud83d\udd2e The optional url of the preview image of the kit. The url must point to a landscape image [ png | jpg | svg ] which will be cropped by a 2x1 rectangle. The image must be at least 1920x960 pixels and smaller than 15 MB.",
                        "default": ""
                    },
                    "version": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Version",
                        "description": "\ud83d\udd00 The optional version of the kit. No version means the latest version.",
                        "default": ""
                    },
                    "remote": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Remote",
                        "description": "\u2601\ufe0f The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
                        "default": ""
                    },
                    "homepage": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Homepage",
                        "description": "\ud83c\udfe0 The optional url of the homepage of the kit.",
                        "default": ""
                    },
                    "license": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "License",
                        "description": "\u2696\ufe0f The optional license [ spdx id | url ] of the kit.",
                        "default": ""
                    },
                    "types": {
                        "items": {
                            "$ref": "#/components/schemas/TypeInput"
                        },
                        "type": "array",
                        "title": "Types",
                        "description": "\ud83e\udde9 The types of the kit."
                    },
                    "designs": {
                        "items": {
                            "$ref": "#/components/schemas/DesignInput"
                        },
                        "type": "array",
                        "title": "Designs",
                        "description": "\ud83c\udfd9\ufe0f The designs of the kit."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the kit."
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "KitInput",
                "description": "\u2198\ufe0f The input for a kit."
            },
            "Kit": {
                "properties": {
                    "uri": {
                        "type": "string",
                        "maxLength": 2048,
                        "title": "Uri",
                        "description": "\ud83c\udd94 The uri of the kit."
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the kit."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the kit.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB. kit.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "preview": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Preview",
                        "description": "\ud83d\udd2e The optional url of the preview image of the kit. The url must point to a landscape image [ png | jpg | svg ] which will be cropped by a 2x1 rectangle. The image must be at least 1920x960 pixels and smaller than 15 MB.",
                        "default": ""
                    },
                    "version": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Version",
                        "description": "\ud83d\udd00 The optional version of the kit. No version means the latest version.",
                        "default": ""
                    },
                    "remote": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Remote",
                        "description": "\u2601\ufe0f The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
                        "default": ""
                    },
                    "homepage": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Homepage",
                        "description": "\ud83c\udfe0 The optional url of the homepage of the kit.",
                        "default": ""
                    },
                    "license": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "License",
                        "description": "\u2696\ufe0f The optional license [ spdx id | url ] of the kit.",
                        "default": ""
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created",
                        "description": "\ud83d\udd52 The creation date of the kit."
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated",
                        "description": "\ud83d\udd52 The last update date of the kit."
                    },
                    "types": {
                        "items": {
                            "$ref": "#/components/schemas/Type"
                        },
                        "type": "array",
                        "title": "Types",
                        "description": "\ud83e\udde9 The types of the kit."
                    },
                    "designs": {
                        "items": {
                            "$ref": "#/components/schemas/Design"
                        },
                        "type": "array",
                        "title": "Designs",
                        "description": "\ud83c\udfd9\ufe0f The designs of the kit."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the kit."
                    }
                },
                "type": "object",
                "required": [
                    "uri",
                    "name"
                ],
                "title": "Kit",
                "description": "\ud83d\uddc3\ufe0f A kit is a collection of types and designs."
            },
            "LocationContext": {
                "properties": {
                    "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "\u2194\ufe0f The longitude of the location in degrees."
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "\u2195\ufe0f The latitude of the location in degrees."
                    }
                },
                "type": "object",
                "required": [
                    "longitude",
                    "latitude"
                ],
                "title": "LocationContext",
                "description": "\ud83d\udccd The context of a location."
            },
            "LocationInput": {
                "properties": {
                    "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "\u2194\ufe0f The longitude of the location in degrees."
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "\u2195\ufe0f The latitude of the location in degrees."
                    }
                },
                "type": "object",
                "required": [
                    "longitude",
                    "latitude"
                ],
                "title": "LocationInput",
                "description": "\ud83d\udccd The input for a location."
            },
            "Location": {
                "properties": {
                    "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "\u2194\ufe0f The longitude of the location in degrees."
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "\u2195\ufe0f The latitude of the location in degrees."
                    }
                },
                "type": "object",
                "required": [
                    "longitude",
                    "latitude"
                ],
                "title": "Location",
                "description": "\ud83d\udccd The output of a location."
            },
            "PieceContext-Input": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the piece.",
                        "default": ""
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeId",
                        "description": "\ud83e\udde9 The type of the piece."
                    },
                    "plane": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlaneContext"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\u25f3 The optional plane of the piece. When pieces are connected only one piece can have a plane."
                    },
                    "center": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiagramPointContext"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\ud83d\udcfa The optional center of the piece in the diagram. When pieces are connected only one piece can have a center."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the piece."
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "PieceContext",
                "description": "\u2b55 A piece is a 3d-instance of a type in a design."
            },
            "PieceContext-": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the piece.",
                        "default": ""
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeId",
                        "description": "\ud83e\udde9 The type of the piece."
                    },
                    "plane": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlaneContext"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\u25f3 The optional plane of the piece. When pieces are connected only one piece can have a plane."
                    },
                    "center": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiagramPointContext"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\ud83d\udcfa The optional center of the piece in the diagram. When pieces are connected only one piece can have a center."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the piece."
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "PieceContext",
                "description": "\u2b55 A piece is a 3d-instance of a type in a design."
            },
            "PieceId": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    }
                },
                "type": "object",
                "title": "PieceId",
                "description": "\ud83e\udeaa The props to identify the piece within the parent design."
            },
            "PieceInput": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the piece.",
                        "default": ""
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeId",
                        "description": "\ud83e\udde9 The type of the piece."
                    },
                    "plane": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlaneInput"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\u25f3 The optional plane of the piece. When pieces are connected only one piece can have a plane."
                    },
                    "center": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiagramPointInput"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\ud83d\udcfa The optional center of the piece in the diagram. When pieces are connected only one piece can have a center."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the piece."
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "PieceInput",
                "description": "\u2b55 A piece is a 3d-instance of a type in a design."
            },
            "Piece": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the piece.",
                        "default": ""
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeId",
                        "description": "\ud83e\udde9 The type of the piece."
                    },
                    "plane": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Plane"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\u25f3 The optional plane of the piece. When pieces are connected only one piece can have a plane."
                    },
                    "center": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DiagramPoint"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\ud83d\udcfa The optional center of the piece in the diagram. When pieces are connected only one piece can have a center."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the piece."
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "Piece",
                "description": "\u2b55 A piece is a 3d-instance of a type in a design."
            },
            "PiecePrediction": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the piece.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the piece.",
                        "default": ""
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeId",
                        "description": "\ud83e\udde9 The type of the piece."
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "PiecePrediction",
                "description": "\u2b55 A piece is a 3d-instance of a type in a design."
            },
            "PlaneContext": {
                "properties": {
                    "origin": {
                        "$ref": "#/components/schemas/PointContext",
                        "description": "\u2331 The origin of the plane."
                    },
                    "xAxis": {
                        "$ref": "#/components/schemas/VectorContext",
                        "description": "\u27a1\ufe0f The x-axis of the plane."
                    },
                    "yAxis": {
                        "$ref": "#/components/schemas/VectorContext",
                        "description": "\u27a1\ufe0f The y-axis of the plane."
                    }
                },
                "type": "object",
                "required": [
                    "origin",
                    "xAxis",
                    "yAxis"
                ],
                "title": "PlaneContext",
                "description": "\u25f3 A plane is an origin (point) and an orientation (x-axis and y-axis)."
            },
            "PlaneInput": {
                "properties": {
                    "origin": {
                        "$ref": "#/components/schemas/PointInput",
                        "description": "\u2331 The origin of the plane."
                    },
                    "xAxis": {
                        "$ref": "#/components/schemas/VectorInput",
                        "description": "\u27a1\ufe0f The x-axis of the plane."
                    },
                    "yAxis": {
                        "$ref": "#/components/schemas/VectorInput",
                        "description": "\u27a1\ufe0f The y-axis of the plane."
                    }
                },
                "type": "object",
                "required": [
                    "origin",
                    "xAxis",
                    "yAxis"
                ],
                "title": "PlaneInput",
                "description": "\u25f3 A plane is an origin (point) and an orientation (x-axis and y-axis)."
            },
            "Plane": {
                "properties": {
                    "origin": {
                        "$ref": "#/components/schemas/Point",
                        "description": "\u2331 The origin of the plane."
                    },
                    "xAxis": {
                        "$ref": "#/components/schemas/Vector",
                        "description": "\u27a1\ufe0f The x-axis of the plane."
                    },
                    "yAxis": {
                        "$ref": "#/components/schemas/Vector",
                        "description": "\u27a1\ufe0f The y-axis of the plane."
                    }
                },
                "type": "object",
                "required": [
                    "origin",
                    "xAxis",
                    "yAxis"
                ],
                "title": "Plane",
                "description": "\u25f3 A plane is an origin (point) and an orientation (x-axis and y-axis)."
            },
            "Point": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the point."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the point."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the point."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "Point",
                "description": "\u2716\ufe0f A 3d-point (xyz) of floating point numbers."
            },
            "PointContext": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the point."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the point."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the point."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "PointContext",
                "description": "\u2716\ufe0f A 3d-point (xyz) of floating point numbers."
            },
            "PointInput": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the point."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the point."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the point."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "PointInput",
                "description": "\u2716\ufe0f A 3d-point (xyz) of floating point numbers."
            },
            "PortContext": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the port.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the port.",
                        "default": ""
                    },
                    "mandatory": {
                        "type": "boolean",
                        "title": "Mandatory",
                        "description": "\ud83d\udcaf Whether the port is mandatory. A mandatory port must be connected in a design.",
                        "default": false
                    },
                    "family": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Family",
                        "description": "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 The optional family of the port. This allows to define explicit compatibility with other ports.",
                        "default": ""
                    },
                    "compatibleFamilies": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Compatiblefamilies",
                        "description": "\u2705 The optional other compatible families of the port. An empty list means this port is compatible with all other ports."
                    },
                    "point": {
                        "$ref": "#/components/schemas/Point",
                        "description": "\u2716\ufe0f The connection point of the port that is attracted to another connection point."
                    },
                    "direction": {
                        "$ref": "#/components/schemas/Vector",
                        "description": "\u27a1\ufe0f The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned."
                    },
                    "t": {
                        "type": "number",
                        "title": "T",
                        "description": "\ud83d\udc8d The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
                        "default": 0.0
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the port."
                    }
                },
                "type": "object",
                "required": [
                    "point",
                    "direction"
                ],
                "title": "PortContext",
                "description": "\ud83d\udd0c A port is a connection point (with a direction) of a type."
            },
            "PortId": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the port.",
                        "default": ""
                    }
                },
                "type": "object",
                "title": "PortId",
                "description": "\ud83e\udeaa The props to identify the port within the parent type."
            },
            "PortInput": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the port.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the port.",
                        "default": ""
                    },
                    "mandatory": {
                        "type": "boolean",
                        "title": "Mandatory",
                        "description": "\ud83d\udcaf Whether the port is mandatory. A mandatory port must be connected in a design.",
                        "default": false
                    },
                    "family": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Family",
                        "description": "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 The optional family of the port. This allows to define explicit compatibility with other ports.",
                        "default": ""
                    },
                    "compatibleFamilies": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Compatiblefamilies",
                        "description": "\u2705 The optional other compatible families of the port. An empty list means this port is compatible with all other ports."
                    },
                    "t": {
                        "type": "number",
                        "title": "T",
                        "description": "\ud83d\udc8d The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
                        "default": 0.0
                    },
                    "point": {
                        "$ref": "#/components/schemas/PointInput",
                        "description": "\u2716\ufe0f The connection point of the port that is attracted to another connection point."
                    },
                    "direction": {
                        "$ref": "#/components/schemas/VectorInput",
                        "description": "\u27a1\ufe0f The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the port."
                    }
                },
                "type": "object",
                "required": [
                    "point",
                    "direction"
                ],
                "title": "PortInput",
                "description": "\ud83d\udd0c A port is a connection point (with a direction) of a type."
            },
            "Port": {
                "properties": {
                    "id_": {
                        "type": "string",
                        "maxLength": 128,
                        "title": "Id",
                        "description": "\ud83c\udd94 The id of the port.",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the port.",
                        "default": ""
                    },
                    "mandatory": {
                        "type": "boolean",
                        "title": "Mandatory",
                        "description": "\ud83d\udcaf Whether the port is mandatory. A mandatory port must be connected in a design.",
                        "default": false
                    },
                    "family": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Family",
                        "description": "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 The optional family of the port. This allows to define explicit compatibility with other ports.",
                        "default": ""
                    },
                    "compatibleFamilies": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Compatiblefamilies",
                        "description": "\u2705 The optional other compatible families of the port. An empty list means this port is compatible with all other ports."
                    },
                    "point": {
                        "$ref": "#/components/schemas/Point",
                        "description": "\u2716\ufe0f The connection point of the port that is attracted to another connection point."
                    },
                    "direction": {
                        "$ref": "#/components/schemas/Vector",
                        "description": "\u27a1\ufe0f The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned."
                    },
                    "t": {
                        "type": "number",
                        "title": "T",
                        "description": "\ud83d\udc8d The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
                        "default": 0.0
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the port."
                    }
                },
                "type": "object",
                "required": [
                    "point",
                    "direction"
                ],
                "title": "Port",
                "description": "\ud83d\udd0c A port is a connection point (with a direction) of a type."
            },
            "QualityContext": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udccf The name of the quality."
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Value",
                        "description": "\ud83d\udccf The optional value [ text | url ] of the quality. No value is equivalent to true for the name.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The optional unit of the value of the quality.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "QualityContext",
                "description": "\ud83d\udccf A quality is a named value with a unit and a definition."
            },
            "QualityInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udccf The name of the quality."
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Value",
                        "description": "\ud83d\udccf The optional value [ text | url ] of the quality. No value is equivalent to true for the name.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The optional unit of the value of the quality.",
                        "default": ""
                    },
                    "definition": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Definition",
                        "description": "\ud83d\udccf The optional definition [ text | uri ] of the quality.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "QualityInput",
                "description": "\ud83d\udccf A quality is a named value with a unit and a definition."
            },
            "Quality": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udccf The name of the quality."
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Value",
                        "description": "\ud83d\udccf The optional value [ text | url ] of the quality. No value is equivalent to true for the name.",
                        "default": ""
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\ud83d\udccf The optional unit of the value of the quality.",
                        "default": ""
                    },
                    "definition": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Definition",
                        "description": "\ud83d\udccf The optional definition [ text | uri ] of the quality.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "Quality",
                "description": "\ud83d\udccf A quality is a named value with a unit and a definition."
            },
            "RepresentationInput": {
                "properties": {
                    "url": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Url",
                        "description": "\ud83d\udd17 The Unique Resource Locator (URL) to the resource of the representation."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the representation.",
                        "default": ""
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags",
                        "description": "\ud83c\udff7\ufe0f The optional tags to group representations. No tags means default."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the representation."
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "RepresentationInput",
                "description": "\ud83d\udcbe A representation is a link to a resource that describes a type for a certain level of detail and tags."
            },
            "Representation": {
                "properties": {
                    "url": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Url",
                        "description": "\ud83d\udd17 The Unique Resource Locator (URL) to the resource of the representation."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the representation.",
                        "default": ""
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags",
                        "description": "\ud83c\udff7\ufe0f The optional tags to group representations. No tags means default."
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities",
                        "description": "\ud83d\udccf The qualities of the representation."
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "Representation",
                "description": "\ud83d\udcbe A representation is a link to a resource that describes a type for a certain level of detail and tags."
            },
            "SideContext": {
                "properties": {
                    "piece": {
                        "$ref": "#/components/schemas/PieceId"
                    },
                    "port": {
                        "$ref": "#/components/schemas/PortId"
                    }
                },
                "type": "object",
                "required": [
                    "piece",
                    "port"
                ],
                "title": "SideContext",
                "description": "\ud83e\uddf1 A side of a piece in a connection."
            },
            "SideInput": {
                "properties": {
                    "piece": {
                        "$ref": "#/components/schemas/PieceId"
                    },
                    "port": {
                        "$ref": "#/components/schemas/PortId"
                    }
                },
                "type": "object",
                "required": [
                    "piece",
                    "port"
                ],
                "title": "SideInput",
                "description": "\ud83e\uddf1 A side of a piece in a connection."
            },
            "Side": {
                "properties": {
                    "piece": {
                        "$ref": "#/components/schemas/PieceId"
                    },
                    "port": {
                        "$ref": "#/components/schemas/PortId"
                    }
                },
                "type": "object",
                "required": [
                    "piece",
                    "port"
                ],
                "title": "Side",
                "description": "\ud83e\uddf1 A side of a piece in a connection."
            },
            "SidePrediction": {
                "properties": {
                    "piece": {
                        "$ref": "#/components/schemas/PieceId"
                    },
                    "port": {
                        "$ref": "#/components/schemas/PortId"
                    }
                },
                "type": "object",
                "required": [
                    "piece",
                    "port"
                ],
                "title": "SidePrediction",
                "description": "\ud83e\uddf1 A side of a piece in a connection."
            },
            "TypeContext-Input": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the type."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the type.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                        "default": ""
                    },
                    "stock": {
                        "type": "integer",
                        "title": "Stock",
                        "description": "\ud83d\udce6 The number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
                        "default": 2147483647
                    },
                    "virtual": {
                        "type": "boolean",
                        "title": "Virtual",
                        "description": "\ud83d\udc7b Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
                        "default": false
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationContext"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/PortContext"
                        },
                        "type": "array",
                        "title": "Ports"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TypeContext",
                "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports."
            },
            "TypeContext-": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the type."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the type.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                        "default": ""
                    },
                    "stock": {
                        "type": "integer",
                        "title": "Stock",
                        "description": "\ud83d\udce6 The number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
                        "default": 2147483647
                    },
                    "virtual": {
                        "type": "boolean",
                        "title": "Virtual",
                        "description": "\ud83d\udc7b Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
                        "default": false
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationContext"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/PortContext"
                        },
                        "type": "array",
                        "title": "Ports"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityContext"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TypeContext",
                "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports."
            },
            "TypeId": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the type."
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TypeId",
                "description": "\ud83e\udeaa The props to identify the type."
            },
            "TypeInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the type."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the type.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                        "default": ""
                    },
                    "stock": {
                        "type": "integer",
                        "title": "Stock",
                        "description": "\ud83d\udce6 The number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
                        "default": 2147483647
                    },
                    "virtual": {
                        "type": "boolean",
                        "title": "Virtual",
                        "description": "\ud83d\udc7b Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
                        "default": false
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
                        "default": ""
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LocationInput"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "representations": {
                        "items": {
                            "$ref": "#/components/schemas/RepresentationInput"
                        },
                        "type": "array",
                        "title": "Representations"
                    },
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/PortInput"
                        },
                        "type": "array",
                        "title": "Ports"
                    },
                    "authors": {
                        "items": {
                            "$ref": "#/components/schemas/AuthorInput"
                        },
                        "type": "array",
                        "title": "Authors"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/QualityInput"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TypeInput",
                "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports."
            },
            "Type": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Name",
                        "description": "\ud83d\udcdb The name of the type."
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "title": "Description",
                        "description": "\ud83d\udcac The optional human-readable description of the type.",
                        "default": ""
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Icon",
                        "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
                        "default": ""
                    },
                    "image": {
                        "type": "string",
                        "maxLength": 1024,
                        "title": "Image",
                        "description": "\ud83d\uddbc\ufe0f The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
                        "default": ""
                    },
                    "variant": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Variant",
                        "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
                        "default": ""
                    },
                    "stock": {
                        "type": "integer",
                        "title": "Stock",
                        "description": "\ud83d\udce6 The number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
                        "default": 2147483647
                    },
                    "virtual": {
                        "type": "boolean",
                        "title": "Virtual",
                        "description": "\ud83d\udc7b Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
                        "default": false
                    },
                    "unit": {
                        "type": "string",
                        "maxLength": 64,
                        "title": "Unit",
                        "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
                        "default": ""
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created",
                        "description": "\ud83d\udd52 The creation date of the type."
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated",
                        "description": "\ud83d\udd52 The last update date of the type."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Location"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "representations": {
                        "items": {
                            "$ref": "#/components/schemas/Representation"
                        },
                        "type": "array",
                        "title": "Representations"
                    },
                    "ports": {
                        "items": {
                            "$ref": "#/components/schemas/Port"
                        },
                        "type": "array",
                        "title": "Ports"
                    },
                    "authors": {
                        "items": {
                            "$ref": "#/components/schemas/Author"
                        },
                        "type": "array",
                        "title": "Authors"
                    },
                    "qualities": {
                        "items": {
                            "$ref": "#/components/schemas/Quality"
                        },
                        "type": "array",
                        "title": "Qualities"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "Type",
                "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "Vector": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the vector."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the vector."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the vector."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "Vector",
                "description": "\u27a1\ufe0f A 3d-vector (xyz) of floating point numbers."
            },
            "VectorContext": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the vector."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the vector."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the vector."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "VectorContext",
                "description": "\u27a1\ufe0f A 3d-vector (xyz) of floating point numbers."
            },
            "VectorInput": {
                "properties": {
                    "x": {
                        "type": "number",
                        "title": "X",
                        "description": "\ud83c\udf9a\ufe0f The x-coordinate of the vector."
                    },
                    "y": {
                        "type": "number",
                        "title": "Y",
                        "description": "\ud83c\udf9a\ufe0f The y-coordinate of the vector."
                    },
                    "z": {
                        "type": "number",
                        "title": "Z",
                        "description": "\ud83c\udf9a\ufe0f The z-coordinate of the vector."
                    }
                },
                "type": "object",
                "required": [
                    "x",
                    "y",
                    "z"
                ],
                "title": "VectorInput",
                "description": "\u27a1\ufe0f A 3d-vector (xyz) of floating point numbers."
            }
        }
    }
}