{
  "$defs": {
    "Author": {
      "description": "\ud83d\udcd1 The output of an author.",
      "properties": {
        "name": {
          "description": "\ud83d\udcdb The name of the author.",
          "maxLength": 64,
          "title": "Name",
          "type": "string"
        },
        "email": {
          "description": "\ud83d\udce7 The email of the author.",
          "maxLength": 128,
          "title": "Email",
          "type": "string"
        }
      },
      "required": ["name", "email"],
      "title": "Author",
      "type": "object"
    },
    "Location": {
      "description": "\ud83d\udccd The output of a location.",
      "properties": {
        "longitude": {
          "description": "\u2194\ufe0f The longitude of the location in degrees.",
          "title": "Longitude",
          "type": "number"
        },
        "latitude": {
          "description": "\u2195\ufe0f The latitude of the location in degrees.",
          "title": "Latitude",
          "type": "number"
        }
      },
      "required": ["longitude", "latitude"],
      "title": "Location",
      "type": "object"
    },
    "Point": {
      "description": "\u2716\ufe0f A 3d-point (xyz) of floating point numbers.",
      "properties": {
        "x": {
          "description": "\ud83c\udf9a\ufe0f The x-coordinate of the point.",
          "title": "X",
          "type": "number"
        },
        "y": {
          "description": "\ud83c\udf9a\ufe0f The y-coordinate of the point.",
          "title": "Y",
          "type": "number"
        },
        "z": {
          "description": "\ud83c\udf9a\ufe0f The z-coordinate of the point.",
          "title": "Z",
          "type": "number"
        }
      },
      "required": ["x", "y", "z"],
      "title": "Point",
      "type": "object"
    },
    "Port": {
      "description": "\ud83d\udd0c A port is a connection point (with a direction) of a type.",
      "properties": {
        "id_": {
          "default": "",
          "description": "\ud83c\udd94 The id of the port.",
          "maxLength": 128,
          "title": "Id",
          "type": "string"
        },
        "description": {
          "default": "",
          "description": "\ud83d\udcac The optional human-readable description of the port.",
          "maxLength": 512,
          "title": "Description",
          "type": "string"
        },
        "mandatory": {
          "default": false,
          "description": "\ud83d\udcaf Whether the port is mandatory. A mandatory port must be connected in a design.",
          "title": "Mandatory",
          "type": "boolean"
        },
        "family": {
          "default": "",
          "description": "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 The optional family of the port. This allows to define explicit compatibility with other ports.",
          "maxLength": 64,
          "title": "Family",
          "type": "string"
        },
        "compatibleFamilies": {
          "description": "\u2705 The optional other compatible families of the port. An empty list means this port is compatible with all other ports.",
          "items": {
            "type": "string"
          },
          "title": "Compatiblefamilies",
          "type": "array"
        },
        "point": {
          "$ref": "#/$defs/Point",
          "description": "\u2716\ufe0f The connection point of the port that is attracted to another connection point."
        },
        "direction": {
          "$ref": "#/$defs/Vector",
          "description": "\u27a1\ufe0f The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned."
        },
        "t": {
          "default": 0.0,
          "description": "\ud83d\udc8d The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
          "title": "T",
          "type": "number"
        },
        "qualities": {
          "description": "\ud83d\udccf The qualities of the port.",
          "items": {
            "$ref": "#/$defs/Quality"
          },
          "title": "Qualities",
          "type": "array"
        }
      },
      "required": ["point", "direction"],
      "title": "Port",
      "type": "object"
    },
    "Quality": {
      "description": "\ud83d\udccf A quality is a named value with a unit and a definition.",
      "properties": {
        "name": {
          "description": "\ud83d\udccf The name of the quality.",
          "maxLength": 64,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "default": "",
          "description": "\ud83d\udccf The optional value [ text | url ] of the quality. No value is equivalent to true for the name.",
          "maxLength": 64,
          "title": "Value",
          "type": "string"
        },
        "unit": {
          "default": "",
          "description": "\ud83d\udccf The optional unit of the value of the quality.",
          "maxLength": 64,
          "title": "Unit",
          "type": "string"
        },
        "definition": {
          "default": "",
          "description": "\ud83d\udccf The optional definition [ text | uri ] of the quality.",
          "maxLength": 512,
          "title": "Definition",
          "type": "string"
        }
      },
      "required": ["name"],
      "title": "Quality",
      "type": "object"
    },
    "Representation": {
      "description": "\ud83d\udcbe A representation is a link to a resource that describes a type for a certain level of detail and tags.",
      "properties": {
        "url": {
          "description": "\ud83d\udd17 The Unique Resource Locator (URL) to the resource of the representation.",
          "maxLength": 1024,
          "title": "Url",
          "type": "string"
        },
        "description": {
          "default": "",
          "description": "\ud83d\udcac The optional human-readable description of the representation.",
          "maxLength": 512,
          "title": "Description",
          "type": "string"
        },
        "tags": {
          "description": "\ud83c\udff7\ufe0f The optional tags to group representations. No tags means default.",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "type": "array"
        },
        "qualities": {
          "description": "\ud83d\udccf The qualities of the representation.",
          "items": {
            "$ref": "#/$defs/Quality"
          },
          "title": "Qualities",
          "type": "array"
        }
      },
      "required": ["url"],
      "title": "Representation",
      "type": "object"
    },
    "Vector": {
      "description": "\u27a1\ufe0f A 3d-vector (xyz) of floating point numbers.",
      "properties": {
        "x": {
          "description": "\ud83c\udf9a\ufe0f The x-coordinate of the vector.",
          "title": "X",
          "type": "number"
        },
        "y": {
          "description": "\ud83c\udf9a\ufe0f The y-coordinate of the vector.",
          "title": "Y",
          "type": "number"
        },
        "z": {
          "description": "\ud83c\udf9a\ufe0f The z-coordinate of the vector.",
          "title": "Z",
          "type": "number"
        }
      },
      "required": ["x", "y", "z"],
      "title": "Vector",
      "type": "object"
    }
  },
  "description": "\ud83e\udde9 A type is a reusable element that can be connected with other types over ports.",
  "properties": {
    "name": {
      "description": "\ud83d\udcdb The name of the type.",
      "maxLength": 64,
      "title": "Name",
      "type": "string"
    },
    "description": {
      "default": "",
      "description": "\ud83d\udcac The optional human-readable description of the type.",
      "maxLength": 512,
      "title": "Description",
      "type": "string"
    },
    "icon": {
      "default": "",
      "description": "\ud83e\ude99 The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
      "maxLength": 1024,
      "title": "Icon",
      "type": "string"
    },
    "image": {
      "default": "",
      "description": "\ud83d\uddbc\ufe0f The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
      "maxLength": 1024,
      "title": "Image",
      "type": "string"
    },
    "variant": {
      "default": "",
      "description": "\ud83d\udd00 The optional variant of the type. No variant means the default variant.",
      "maxLength": 64,
      "title": "Variant",
      "type": "string"
    },
    "stock": {
      "default": 2147483647,
      "description": "\ud83d\udce6 The number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
      "title": "Stock",
      "type": "integer"
    },
    "virtual": {
      "default": false,
      "description": "\ud83d\udc7b Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
      "title": "Virtual",
      "type": "boolean"
    },
    "unit": {
      "default": "",
      "description": "\u24c2\ufe0f The length unit of the point and the direction of the ports of the type.",
      "maxLength": 64,
      "title": "Unit",
      "type": "string"
    },
    "created": {
      "description": "\ud83d\udd52 The creation date of the type.",
      "format": "date-time",
      "title": "Created",
      "type": "string"
    },
    "updated": {
      "description": "\ud83d\udd52 The last update date of the type.",
      "format": "date-time",
      "title": "Updated",
      "type": "string"
    },
    "location": {
      "anyOf": [
        {
          "$ref": "#/$defs/Location"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "representations": {
      "items": {
        "$ref": "#/$defs/Representation"
      },
      "title": "Representations",
      "type": "array"
    },
    "ports": {
      "items": {
        "$ref": "#/$defs/Port"
      },
      "title": "Ports",
      "type": "array"
    },
    "authors": {
      "items": {
        "$ref": "#/$defs/Author"
      },
      "title": "Authors",
      "type": "array"
    },
    "qualities": {
      "items": {
        "$ref": "#/$defs/Quality"
      },
      "title": "Qualities",
      "type": "array"
    }
  },
  "required": ["name"],
  "title": "Type",
  "type": "object"
}
