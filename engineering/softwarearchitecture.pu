@startuml "software architecture"
skinparam linetype ortho

abstract class ModelBase <<(M,LightGray)>> #LightGray {
  +parse(input): ModelBase
  +dump(): Output
}

class Semio #LightYellow {
  release: str
  engine: str
  created: datetime
}

class Kit #Application {
  uri: str
  name: str
  description: str
  icon: str
  image: str
  preview: str
  version: str
  remote: str
  homepage: str
  license: str
  created: datetime
  updated: datetime
}

class Type #Application {
  name: str
  description: str
  icon: str
  image: str
  variant: str
  virtual: bool
  unit: str
  created: datetime
  updated: datetime
}

class Design #Application {
  name: str
  description: str
  icon: str
  image: str
  variant: str
  view: str
  unit: str
  created: datetime
  updated: datetime
}

class Representation #Application {
  url: str
  description: str
}

class Tag #Application {
  name: str
  order: int
}

class Port #Application {
  id_: str
  description: str
  family: str
  t: float
}

class CompatibleFamily #Application {
  name: str
  order: int
}

class Piece #Application {
  id_: str
  description: str
}

class Plane #Application {
  // originX, originY, etc. (flattened Point/Vector)
}

class Connection #Application {
  description: str
  gap: float
  shift: float
  raise_: float
  rotation: float
  turn: float
  tilt: float
  x: float // diagram x
  y: float // diagram y
}

class Side #Application {
  // References PieceId and PortId
}

class Quality #Application {
  name: str
  value: str
  unit: str
  definition: str
}

class Author #Application {
  name: str
  email: str
  rank: int
}

class Point #DataType {
  x: float
  y: float
  z: float
}

class Vector #DataType {
  x: float
  y: float
  z: float
}

class DiagramPoint #DataType {
  x: float
  y: float
}

ModelBase <|-- Kit
ModelBase <|-- Type
ModelBase <|-- Design
ModelBase <|-- Representation
ModelBase <|-- Port
ModelBase <|-- Piece
ModelBase <|-- Connection
ModelBase <|-- Quality
ModelBase <|-- Author
ModelBase <|-- Plane
ModelBase <|-- Tag
ModelBase <|-- CompatibleFamily
ModelBase <|-- Side
ModelBase <|-- Point
ModelBase <|-- Vector
ModelBase <|-- DiagramPoint

Kit *-- "many" Type : contains >
Kit *-- "many" Design : contains >
Kit *-- "many" Quality : has >

Design *-- "many" Piece : contains >
Design *-- "many" Connection : contains >
Design *-- "many" Author : authored by >
Design *-- "many" Quality : has >

Type *-- "many" Representation : has >
Type *-- "many" Port : has >
Type *-- "many" Author : authored by >
Type *-- "many" Quality : has >

Piece *-- "1" Type : instance of >
Piece o-- "0..1" Plane : located by >
Piece *-- "many" Quality : has >

Connection *-- "many" Quality : has >
Connection o-- "1" Side : connected >
Connection o-- "1" Side : connecting >

Side o-- "1" Piece : refers to >
Side o-- "1" Port : refers to >

Representation *-- "many" Tag : tagged with >
Representation *-- "many" Quality : has >

Port *-- "many" CompatibleFamily : compatible with >
Port *-- "many" Quality : has >
Port *-- "1" Point : at >
Port *-- "1" Vector : oriented by >

Plane *-- "1" Point : origin >
Plane *-- "1" Vector : xAxis >
Plane *-- "1" Vector : yAxis >

@enduml