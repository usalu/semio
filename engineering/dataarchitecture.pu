@startuml "data architecture"
skinparam linetype ortho

entity Semio {
    *release : string <<PK>>
    *engine : string
    *created : datetime
}

entity Quality {
    *pk : int <<PK,generated>>
    *name : string
    *value : string
    *unit : string
    *definition : string
    ..
    representationPk : int <<FK>>
    portPk : int <<FK>>
    typePk : int <<FK>>
    piecePk : int <<FK>>
    connectionPk : int <<FK>>
    designPk : int <<FK>>
    kitPk : int <<FK>>
}
note bottom of Quality
    value, definition can be empty
    empty value means true
    one of portPk, typePk, piecePk, connectionPk, designPk, kitPk must be set
end note

entity Tag {
    *pk : int <<PK,generated>>
    *name : string
    *order : int
    ..
    representationPk : int <<FK>>
}

entity Representation {
    *pk : int <<PK,generated>>
    *url : string
    *description : string
    ..
    typePk : int <<FK>>
}
note right of Representation
    description can be empty
end note

entity Plane {
    *pk : int <<PK,generated>>
    *originX : float
    *originY : float
    *originZ : float
    *xAxisX : float
    *xAxisY : float
    *xAxisZ : float
    *yAxisX : float
    *yAxisY : float
    *yAxisZ : float
}

entity CompatibleFamily {
  *pk : int <<PK,generated>>
  *name : string
  *order : int
  ..
  portPk : int <<FK>>
}

entity Port {
    *pk : int <<PK,generated>>
    *id : string
    *description : string
    *family : string
    *mandatory : boolean
    *pointX : float
    *pointY : float
    *pointZ : float
    *directionX : float
    *directionY : float
    *directionZ : float
    *t : float
    ..
    typePk : int <<FK>>
}
note right of Port
    description, family can be empty
    t is in [0,1[
end note

entity Author {
    *pk : int <<PK,generated>>
    *name : string
    *email : string
    *rank : int
    ..
    typePk : int <<FK>>
    designPk : int <<FK>>
}
note right of Author
    one of typePk or designPk must be set
end note

entity Type {
    *pk : int <<PK,generated>>
    *name : string
    *description : string
    *icon : string
    *image : string
    *variant : string
    *virtual : boolean
    *unit : string
    *created : datetime
    *updated : datetime
    ..
    kitPk : int <<FK>>
}
note right of Type
    description, icon, image, variant can be empty
    empty variant means default
end note

entity Piece {
    *pk : int <<PK,generated>>
    *id : string
    *description : string
    *planePk : int <<FK>>
    *centerX : float
    *centerY : float
    ..
    typePk : int <<FK>>
    designPk : int <<FK>>
    piecePk : int <<FK>>
}
note right of Piece
    description can be empty
    one of typePk or (designPk and piecePk) must be set
end note

entity Connection {
    *pk : int <<PK,generated>>
    *connectedPiecePk : int <<FK>>
    *connectedPortPk : int <<FK>>
    *connectingPiecePk : int <<FK>>
    *connectingPortPk : int <<FK>>
    *description : string
    *gap : float
    *shift : float
    *raise : float
    *rotation : float
    *turn : float
    *tilt : float
    *x : float
    *y : float
    ..
    designPk : int <<FK>>
}
note right of Connection
    description can be empty
end note

entity Design {
    *pk : int <<PK,generated>>
    *name : string
    *description : string
    *icon : string
    *image : string
    *variant : string
    *view : string
    *unit : string
    *created : datetime
    *updated : datetime
    ..
    kitPk : int <<FK>>
}
note right of Design
    description, icon, image, variant, view can be empty
    empty variant means default
    empty view means default
end note

entity Kit {
    *pk : int <<PK,generated>>
    *uri : string <<Unique>>
    *name : string
    *description : string
    *icon : string
    *image : string
    *preview : string
    *version : string
    *remote : string
    *homepage : string
    *license : string
    *created : datetime
    *updated : datetime
}
note left of Kit
    description, icon, image, preview, version, remote, homepage, license can be empty
    empty version means latest
end note

Kit ||--o{ Type
Kit ||--o{ Design
Kit ||--o{ Quality

Design ||--o{ Piece
Design ||--o{ Connection
Design ||--o{ Author
Design ||--o{ Quality

Type ||--o{ Representation
Type ||--o{ Port
Type ||--o{ Author
Type ||--o{ Quality

Piece ||--o{ Plane
Piece ||--o{ Quality

Connection ||--o{ Quality

Representation ||--o{ Tag
Representation ||--o{ Quality

Port ||--o{ CompatibleFamily
Port ||--o{ Quality

Connection -- Piece : "connected"
Connection -- Piece : "connecting"
Connection -- Port : "connected"
Connection -- Port : "connecting"

@enduml