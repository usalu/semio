@startuml "data architecture"
skinparam linetype ortho

entity semio {
    *release : string <<PK>>
    *created_by_app : string
    *app_version : string
    *created_at : datetime
}

entity attributes {
    *id : int <<PK,generated>>
    *key : string
    *value : string
    *definition : string
    ..
    representation_id : int <<FK>>
    port_id : int <<FK>>
    type_id : int <<FK>>
    piece_id : int <<FK>>
    connection_id : int <<FK>>
    design_id : int <<FK>>
    kit_id : int <<FK>>
    --
    CHECK (( (representation_id IS NOT NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NOT NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NOT NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NOT NULL AND connection_id IS NULL AND design_id IS NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NOT NULL AND design_id IS NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NOT NULL AND kit_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL AND kit_id IS NOT NULL)
        ))
    UNIQUE (key,representation_id, port_id, type_id, piece_id, connection_id, design_id, kit_id)
}

entity files {
    *id : int <<PK,generated>>
    *path : string
    *remote_url : string
    *description : string
    ..
    *kit_id : int <<FK>>
    --
    UNIQUE (path, kit_id)
}

entity qualities {
    *id : int <<PK,generated>>
    *key : string
    *name : string
    *description : string
    *uri : string
    *kind : int
    *can_scale : boolean
    *default_si_unit : string
    *default_imperial_unit : string
    *min : float
    *is_min_excluded : boolean
    *max : float
    *is_max_excluded : boolean
    *default_value : float
    *formula : string
    *created_at : datetime
    *updated_at : datetime
    ..
    *kit_id : int <<FK>>
    --
    CHECK (kind >= 0 AND kind <= 63)
    CHECK (kind & (kind - 1) = 0 OR kind IN (0, 1, 2, 4, 8, 16))
    UNIQUE (key, kit_id)
}


entity benchmarks {
    *id : int <<PK,generated>>
    *name : string
    *icon : string
    *min : float
    *is_min_excluded : boolean
    *max : float
    *is_max_excluded : boolean
    ..
    *quality_id : int <<FK>>
    --
    UNIQUE (name, quality_id)
}

entity props {
    *id : int <<PK,generated>>
    *key : string
    *value : string
    *unit : string
    *created_at : datetime
    *updated_at : datetime
    ..
    representation_id : int <<FK>>
    port_id : int <<FK>>
    type_id : int <<FK>>
    piece_id : int <<FK>>
    connection_id : int <<FK>>
    design_id : int <<FK>>
    --
    CHECK (( (representation_id IS NOT NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NOT NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NOT NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NOT NULL AND connection_id IS NULL AND design_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NOT NULL AND design_id IS NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NOT NULL)
        OR (representation_id IS NULL AND port_id IS NULL AND type_id IS NULL AND piece_id IS NULL AND connection_id IS NULL AND design_id IS NULL)
        ))
    UNIQUE (key, representation_id, port_id, type_id, piece_id, connection_id, design_id)
}

entity stats {
    *id : int <<PK,generated>>
    *key : string
    *unit : string
    *min : float
    *is_min_excluded : boolean
    *max : float
    *is_max_excluded : boolean
    *created_at : datetime
    *updated_at : datetime
    ..
    *design_id : int <<FK>>
    --
    UNIQUE (key, design_id)
}

entity tags {
    *id : int <<PK,generated>>
    *name : string
    *order : int
    ..
    *representation_id : int <<FK>>
    --
    UNIQUE (name, representation_id)
}

entity concepts {
    *id : int <<PK,generated>>
    *name : string
    *order : int
    ..
    type_id : int <<FK>>
    design_id : int <<FK>>
    kit_id : int <<FK>>
    --
    CHECK ((type_id IS NOT NULL AND design_id IS NULL AND kit_id IS NULL) OR
           (type_id IS NULL AND design_id IS NOT NULL AND kit_id IS NULL) OR
           (type_id IS NULL AND design_id IS NULL AND kit_id IS NOT NULL))
    UNIQUE (name, type_id, design_id, kit_id)
}

entity representations {
    *id : int <<PK,generated>>
    *url : string
    file_id : int <<FK>>
    *description : string
    ..
    type_id : int <<FK>>
    --
    CHECK ((url != '' AND file_id IS NULL) OR (url == '' AND file_id IS NOT NULL))
}


entity planes {
    *id : int <<PK,generated>>
    *origin_x : float
    *origin_y : float
    *origin_z : float
    *x_axis_x : float
    *x_axis_y : float
    *x_axis_z : float
    *y_axis_x : float
    *y_axis_y : float
    *y_axis_z : float
}

entity compatible_families {
  *id : int <<PK,generated>>
  *name : string
  *order : int
  ..
  port_id : int <<FK>>
}

entity ports {
    *id : int <<PK,generated>>
    *port_id : string
    *description : string
    *family : string
    *is_mandatory : boolean
    *point_x : float
    *point_y : float
    *point_z : float
    *direction_x : float
    *direction_y : float
    *direction_z : float
    *t : float
    ..
    type_id : int <<FK>>
    design_id : int <<FK>>
    --
    CHECK ((type_id IS NOT NULL AND design_id IS NULL) OR
           (type_id IS NULL AND design_id IS NOT NULL))
    CHECK (t >= 0 AND t < 1)
    UNIQUE (port_id, type_id, design_id)
}

entity authors {
    *id : int <<PK,generated>>
    *name : string
    *email : string
    ..
    kit_id : int <<FK>>
    --
    UNIQUE (email, kit_id)
}

entity author_artifact {
    *author_id : int <<PK,FK>>
    *rank : int
    type_id : int <<PK,FK>>
    design_id : int <<PK,FK>>
    --
    CHECK ((type_id IS NOT NULL AND design_id IS NULL) OR
           (type_id IS NULL AND design_id IS NOT NULL))
    CHECK (rank >= 0)
    UNIQUE (author_id, type_id, design_id)
}

entity types {
    *id : int <<PK,generated>>
    *name : string
    *variant : string
    *is_virtual : boolean
    *can_scale : boolean
    *can_mirror : boolean
    *unit : string
    *available_count : float
    *location_id : int <<FK>>
    *icon : string
    *image_url : string
    *description : string
    *created_at : datetime
    *updated_at : datetime
    ..
    kit_id : int <<FK>>
    --
    UNIQUE (name, variant, kit_id)
    CHECK (available_count >= 0 AND available_count <= 2147483647)
}

entity pieces {
    *id : int <<PK,generated>>
    *piece_id : string
    *type_id : int <<FK>>
    *design_id : int <<FK>>
    *plane_id : int <<FK>>
    *center_id : int <<FK>>
    *scale : float
    *mirror_plane_id : int <<FK>>
    *is_hidden: boolean
    *is_locked: boolean
    *color: string
    *description : string
    ..
    parent_piece_id : int <<FK>>
    --
    CHECK ((type_id IS NOT NULL AND design_id IS NULL AND parent_piece_id IS NULL) OR
           (type_id IS NULL AND design_id IS NOT NULL AND parent_piece_id IS NOT NULL))
    CHECK (color = '' OR color ~ '^#[0-9A-Fa-f]{6}$')
    UNIQUE (piece_id, design_id)
}

entity connections {
    *id : int <<PK,generated>>
    *connected_piece_id : int <<FK>>
    *connected_design_piece_id : int <<FK>>
    *connected_port_id : int <<FK>>
    *connecting_piece_id : int <<FK>>
    *connecting_design_piece_id : int <<FK>>
    *connecting_port_id : int <<FK>>
    *description : string
    *gap : float
    *shift : float
    *rise : float
    *rotation : float
    *turn : float
    *tilt : float
    *x : float
    *y : float
    ..
    design_id : int <<FK>>
    --
    CHECK (description IS NOT NULL OR description = '')
    CHECK (connecting_piece_id != connected_piece_id)
}

entity layers {
    *id : int <<PK,generated>>
    *name : string
    *description : string
    *color: string
    ..
    design_id : int <<FK>>
    --
    CHECK (color = '' OR color ~ '^#[0-9A-Fa-f]{6}$')
}

entity groups {
    *id : int <<PK,generated>>
    name : string
    description : string
    *color: string
    ..
    design_id : int <<FK>>
    --
    CHECK (color = '' OR color ~ '^#[0-9A-Fa-f]{6}$')
}

entity group_pieces {
    *group_id : int <<PK,FK>>
    *piece_id : int <<PK,FK>>
}

entity designs {
    *id : int <<PK,generated>>
    *name : string
    *variant : string
    *view : string
    *can_scale : boolean
    *can_mirror : boolean
    *unit : string
    *location_id : int <<FK>>
    *icon : string
    *image_url : string
    *description : string
    *created_at : datetime
    *updated_at : datetime
    ..
    kit_id : int <<FK>>
    --
    UNIQUE (name, variant, view, kit_id)
    CHECK (name != '')
    CHECK (unit != '')
}

entity kits {
    *id : int <<PK,generated>>
    *name : string
    *version : string
    *remote_url : string
    *homepage_url : string
    *license : string
    *icon : string
    *image_url : string
    *description : string
    *created_at : datetime
    *updated_at : datetime
    --
    CHECK (name != '')
}

author_artifact -- authors : "links" >
author_artifact -- types : "references" >
author_artifact -- designs : "references" >

representations ||--o{ tags : "has" >
representations ||--o{ attributes : "has" >
representations -- files : "might reference" >

ports ||--o{ compatible_families : "has" >
ports ||--o{ attributes : "has" >
ports ||--o{ props : "has" >

types ||--o{ locations : "has" >
types ||--o{ representations : "has" >
types ||--o{ ports : "has" >
types ||--o{ authors : "has" >
types ||--o{ attributes : "has" >
types ||--o{ concepts : "has" >
types -- authors : "has" >

pieces ||--o{ planes : "has" >
pieces ||--o{ attributes : "has" >

group_pieces -- pieces : "links" >
group_pieces -- groups : "references" >
group_pieces -- pieces : "references" >

connections ||--o{ attributes : "has" >
connections -- pieces : "connected" >
connections -- pieces : "connecting" >
connections -- ports : "connected" >
connections -- ports : "connecting" >

designs ||--o{ pieces
designs ||--o{ connections
designs ||--o{ stats
designs ||--o{ props
designs ||--o{ layers
designs ||--o{ groups
designs ||--o{ locations
designs ||--o{ concepts
designs ||--o{ attributes
designs -- authors : "has" >

kits ||--o{ types
kits ||--o{ designs
kits ||--o{ qualities
kits ||--o{ files
kits ||--o{ authors
kits ||--o{ concepts
kits ||--o{ attributes

@enduml