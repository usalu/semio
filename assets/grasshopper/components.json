{
  "Util": {
    "1": [
      {
        "name": "Merge Designs",
        "description": "Merge a list of distinct designs into a new design. All designs are normalized first, so the connections align. All the pieces have the name and variant as a prefix to ensure uniqueness. Make sure every design is distinct by having a unique combination of name and variant.",
        "icon": "icon",
        "nickname": "\u22faDsns",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "The name of the design.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human description of the design.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | name | url ] of the design.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional value of the design.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional view of the design. No view means the default view.",
            "name": "View",
            "nickname": "Vw?",
            "kind": "View"
          },
          {
            "description": "The optional attributes of the design.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          },
          {
            "description": "The optional authors of the design.",
            "name": "Authors",
            "nickname": "Au*",
            "kind": "Authors"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Interpolate Designs",
        "description": "Interpolate between a source design and a target design. The target will act as a blueprint. The result is an interpolated union design and two unmodified but filtered difference design. Piece planes and connection values are linearly interpolated.",
        "icon": "icon",
        "nickname": "\u21adDsns",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "S",
            "kind": "Design"
          },
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "T",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "t",
            "kind": "Number"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn (S \u2229 T)",
            "kind": "Design"
          },
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn (S \\ T)",
            "kind": "Design"
          },
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn (T \\ S)",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Move Design",
        "description": "Move (translate and rotate) the design by moving all planes and centers.",
        "icon": "icon",
        "nickname": "\u25f6Dsn",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of three-dimensional transformations",
            "name": "Transform",
            "nickname": "Pn",
            "kind": "Transform"
          },
          {
            "description": "Contains a collection of three-dimensional transformations",
            "name": "Transform",
            "nickname": "Ce",
            "kind": "Transform"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Flatten Design",
        "description": "Flatten a design.",
        "nickname": "\u2193Dsn",
        "inputs": [
          {
            "description": "Design to flatten.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Types that are used by the pieces in the design.",
            "name": "Types",
            "nickname": "Ty+",
            "kind": "Types"
          }
        ],
        "outputs": [
          {
            "description": "Flat Design with no connections.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "icon": ""
      },
      {
        "name": "Remove Pieces",
        "description": "Remove all pieces (and all associated connections) from a design.",
        "icon": "icon",
        "nickname": "-Pcs",
        "inputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Ids",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": null,
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": null,
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          }
        ]
      },
      {
        "name": "Replace Type",
        "description": "Replace a type (name) in a design. All variants stay the same and must exist in the new type.",
        "icon": "icon",
        "nickname": "\u21bbTyp",
        "inputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "ONa",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "NNa",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Vary Types",
        "description": "Change a variant (name) from one type to another variant of the same type for all pieces of a design.",
        "icon": "icon",
        "nickname": "\u21b7Typ",
        "inputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Name of the type of the piece.",
            "name": "Type Name",
            "nickname": "Na",
            "kind": "Type Name"
          },
          {
            "description": "The optional variant of the type of the piece. No variant means the default variant.",
            "name": "Type Variant",
            "nickname": "OVn",
            "kind": "Type Variant"
          },
          {
            "description": "The optional variant of the type of the piece. No variant means the default variant.",
            "name": "Type Variant",
            "nickname": "NVn",
            "kind": "Type Variant"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Sum Attributes",
        "description": "Sum up the attributes of a type for each piece with this type in a design.",
        "icon": "icon",
        "nickname": "\u2211Qal",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": null,
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Name of the attribute.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Num",
            "kind": "Number"
          },
          {
            "description": "A attribute is meta-data for decision making.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          }
        ]
      }
    ],
    "2": [
      {
        "name": "Normalize Kit",
        "description": "Normalize a kit to this document. This normalizes all types and designs and reorders them. Types are reordered after name and variant and designs after name, variant and view.",
        "icon": "icon",
        "nickname": "\u21d2Kit",
        "inputs": [
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          }
        ],
        "outputs": [
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          }
        ]
      },
      {
        "name": "Normalize Design",
        "description": "Normalize a design for this document. This includes changing the unit to the document unit and rescaling the affected values. Further it reoders pieces, connections and attributes. Connections might be swapped, so that the connected piece id is lexically first. The order of authors is not changed.",
        "icon": "icon",
        "nickname": "\u21d2Dsn",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Normalize Type",
        "description": "Normalize a type for this document. This converts the length unit of the type to the length unit of this document and it scales the ports by the right scaling factor. Further it sorts the representations, ports, attributes by it's keys. The order of authors is not changed.",
        "icon": "icon",
        "nickname": "\u21d2Typ",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          }
        ],
        "outputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          }
        ]
      },
      {
        "name": "Simplify Design",
        "description": "Simplify the design by replacing all ids of the pieces with a list of numbers in which the pieces appear first in the design.",
        "icon": "icon",
        "nickname": "\u2192Dsn",
        "inputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Sort Design",
        "description": "Sort a design by reordering pieces and connections to appear in order that they are discovered by breadth-first-search and some times flipping connected and connecting if the connected is not the parent of the connecting.",
        "nickname": "\u2050Dsn",
        "inputs": [
          {
            "description": "Design to sort.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "outputs": [
          {
            "description": "Sorted Design.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "icon": ""
      }
    ],
    "3": [
      {
        "name": "Convert Unit",
        "description": "Convert a unit.",
        "nickname": "\u21a6Unt",
        "inputs": [
          {
            "description": "Value to convert.",
            "name": "Value",
            "nickname": "Vl",
            "kind": "Value"
          },
          {
            "description": "Unit to convert from.",
            "name": "From Unit",
            "nickname": "FU",
            "kind": "From Unit"
          },
          {
            "description": "Unit to convert to.",
            "name": "To Unit",
            "nickname": "TU",
            "kind": "To Unit"
          }
        ],
        "outputs": [
          {
            "description": "Converted value.",
            "name": "Converted Value",
            "nickname": "CV",
            "kind": "Converted Value"
          }
        ],
        "icon": ""
      },
      {
        "name": "Jaccard Index",
        "description": "Compute the Jaccard Index of two sets.",
        "icon": "icon",
        "nickname": "!Jac",
        "inputs": [
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Set1",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Set2",
            "kind": "Data"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "N",
            "kind": "Number"
          }
        ]
      }
    ]
  },
  "Templates": {
    "2": [
      {
        "name": "Linear Connections",
        "description": "Create an array of linear connections (for n pieces this creates n-1 connections) where every piece is connected with the next piece. The spacing units are connections.",
        "icon": "icon",
        "nickname": "\u2026Cons",
        "inputs": [
          {
            "description": null,
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "A bidirectional connection between two pieces of a design.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          }
        ]
      },
      {
        "name": "Opinionated Attribute",
        "description": "Construct an opinionated attribute with a standard name.",
        "icon": "icon",
        "nickname": "\u219dQal",
        "inputs": [
          {
            "description": "The name of the attribute.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value [ text | url ] of the attribute. No value is equivalent to true.",
            "name": "Value",
            "nickname": "Vl?",
            "kind": "Value"
          },
          {
            "description": "Contains a collection of boolean values",
            "name": "Boolean",
            "nickname": "Im",
            "kind": "Boolean"
          }
        ],
        "outputs": [
          {
            "description": "A attribute is a key value pair with an an optional definition.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          }
        ]
      },
      {
        "name": "Random Ids",
        "description": "Generate random ids.",
        "nickname": "%Ids",
        "inputs": [
          {
            "description": "Number of ids to generate.",
            "name": "Count",
            "nickname": "Ct",
            "kind": "Count"
          },
          {
            "description": "Seed for the random generator.",
            "name": "Seed",
            "nickname": "Se",
            "kind": "Seed"
          },
          {
            "description": "If true, the generated ids will be unique for this component.",
            "name": "Unique Component",
            "nickname": "UC",
            "kind": "Unique Component"
          }
        ],
        "outputs": [
          {
            "description": "Generated ids.",
            "name": "Ids",
            "nickname": "Id+",
            "kind": "Ids"
          }
        ],
        "icon": ""
      }
    ]
  },
  "Selecting": {
    "1": [
      {
        "name": "Select Kit",
        "description": "Select a kit with a name and an optional version.\nIf no version is provided it will select all variants.\nIf you want to select the default version then use the empty text.",
        "icon": "icon",
        "nickname": "?Kit",
        "inputs": [
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "The name of the kit.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional version of the kit. No version means the latest version.",
            "name": "Version",
            "nickname": "Vr?",
            "kind": "Version"
          }
        ],
        "outputs": [
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Design",
        "description": "Select a design with a name, an optional variant and an optional view.\nIf no variant is provided it will select all variants.\nIf you want to select the default variant then use the empty text.\nIf no view is provided it will select all views.\nIf you want to select the default view then use the empty text.",
        "icon": "icon",
        "nickname": "?Dsn",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "The name of the design.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value of the design.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional view of the design. No view means the default view.",
            "name": "View",
            "nickname": "Vw?",
            "kind": "View"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Type",
        "description": "Select a type with a name and an optional variant. If no variant is provided it will select all variants. If you want to select the default type then use the empty text.",
        "icon": "icon",
        "nickname": "?Typ",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "The name of the type.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value of the type.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          }
        ],
        "outputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Type by Piece",
        "description": "Select the type of a piece.",
        "icon": "icon",
        "nickname": "?Typ",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          }
        ],
        "outputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Connection",
        "description": "Select a connection with the connected id and the connecting id. The connections are symetric, so if the conected is the connecting and vice versa it will still selct them.",
        "icon": "icon",
        "nickname": "?Con",
        "inputs": [
          {
            "description": "A connection between two pieces in a design.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          },
          {
            "description": "Id of the connected piece of the side.",
            "name": "Connected Piece Id",
            "nickname": "CdPc",
            "kind": "Connected Piece Id"
          },
          {
            "description": "Id of the connected piece of the side.",
            "name": "Connecting Piece Id",
            "nickname": "CgPc",
            "kind": "Connecting Piece Id"
          }
        ],
        "outputs": [
          {
            "description": "A connection between two pieces in a design.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          },
          {
            "description": "Contains a collection of boolean values",
            "name": "Boolean",
            "nickname": "Fl",
            "kind": "Boolean"
          }
        ]
      },
      {
        "name": "Select Pieces",
        "description": "Select pieces of a certain type. If no variant is provided it will select all variants. If you want to select the default type then use the empty text.",
        "icon": "icon",
        "nickname": "?Pces",
        "inputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "The name of the type.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value of the type.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          }
        ],
        "outputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          }
        ]
      },
      {
        "name": "Select Piece",
        "description": "Select a piece with the id.",
        "icon": "icon",
        "nickname": "?Pce",
        "inputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "Id of the piece.",
            "name": "Id",
            "nickname": "Id",
            "kind": "Id"
          }
        ],
        "outputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Fixed",
        "description": "Select a fixed piece. A piece is fixed when it has a plane (and a center).",
        "icon": "icon",
        "nickname": "?Fix",
        "inputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          }
        ],
        "outputs": [
          {
            "description": "A piece is a 3d-instance of a type in a design.",
            "name": "Piece",
            "nickname": "Fx",
            "kind": "Piece"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Port",
        "description": "Select a port with the id. If no port matches, null is returned.",
        "icon": "icon",
        "nickname": "?Por",
        "inputs": [
          {
            "description": "A port is a connection point (with a direction) of a type.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          },
          {
            "description": "The optional local identifier of the port within the type. No id means the default port.",
            "name": "Id",
            "nickname": "Id?",
            "kind": "Id"
          }
        ],
        "outputs": [
          {
            "description": "A port is a connection point (with a direction) of a type.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Representation",
        "description": "Select exactly one representation based on tags. The tag matching is based on the highest Jaccard index (|\u2229|/|\u222a|).",
        "icon": "icon",
        "nickname": "?Rep",
        "inputs": [
          {
            "description": "A representation is a link to a resource that describes a type for a certain level of detail and tags.",
            "name": "Representation",
            "nickname": "Rp",
            "kind": "Representation"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          }
        ],
        "outputs": [
          {
            "description": "A representation is a link to a resource that describes a type for a certain level of detail and tags.",
            "name": "Representation",
            "nickname": "Rp",
            "kind": "Representation"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Select Attribute",
        "description": "Select a attribute by its name. If no attribute matches, null is returned.",
        "icon": "icon",
        "nickname": "?Atr",
        "inputs": [
          {
            "description": "A attribute is a key value pair with an an optional definition.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          },
          {
            "description": "The name of the attribute.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          }
        ],
        "outputs": [
          {
            "description": "A attribute is a key value pair with an an optional definition.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          }
        ]
      }
    ]
  },
  "Scripting": {
    "3": [
      {
        "name": "Deserialize Kit",
        "description": "Deserialize a kit.",
        "nickname": "<Kit",
        "inputs": [
          {
            "description": "Text of serialized Kit.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Kit.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Design",
        "description": "Deserialize a design.",
        "nickname": "<Dsn",
        "inputs": [
          {
            "description": "Text of serialized Design.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Design.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Type",
        "description": "Deserialize a type.",
        "nickname": "<Typ",
        "inputs": [
          {
            "description": "Text of serialized Type.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Type.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Connection",
        "description": "Deserialize a connection.",
        "nickname": "<Con",
        "inputs": [
          {
            "description": "Text of serialized Connection.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Connection.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Piece",
        "description": "Deserialize a piece.",
        "nickname": "<Pce",
        "inputs": [
          {
            "description": "Text of serialized Piece.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Piece.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Port",
        "description": "Deserialize a port.",
        "nickname": "<Por",
        "inputs": [
          {
            "description": "Text of serialized Port.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Port.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Representation",
        "description": "Deserialize a representation.",
        "nickname": "<Rep",
        "inputs": [
          {
            "description": "Text of serialized Representation.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Representation.",
            "name": "Representation",
            "nickname": "Rp",
            "kind": "Representation"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Attribute",
        "description": "Deserialize a attribute.",
        "nickname": "<Atr",
        "inputs": [
          {
            "description": "Text of serialized Attribute.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Attribute.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Coord",
        "description": "Deserialize a coord.",
        "nickname": "<DPt",
        "inputs": [
          {
            "description": "Text of serialized Coord.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Coord.",
            "name": "Coord",
            "nickname": "DP",
            "kind": "Coord"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Location",
        "description": "Deserialize a location.",
        "nickname": "<Loc",
        "inputs": [
          {
            "description": "Text of serialized Location.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Location.",
            "name": "Location",
            "nickname": "Lc",
            "kind": "Location"
          }
        ],
        "icon": ""
      },
      {
        "name": "Deserialize Author",
        "description": "Deserialize a author.",
        "nickname": "<Aut",
        "inputs": [
          {
            "description": "Text of serialized Author.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Deserialized Author.",
            "name": "Author",
            "nickname": "Au",
            "kind": "Author"
          }
        ],
        "icon": ""
      }
    ],
    "1": [
      {
        "name": "Decode Text",
        "description": "Decode a text.",
        "nickname": "<Txt",
        "inputs": [
          {
            "description": "Encoded text to decode.",
            "name": "Encoded Text",
            "nickname": "En",
            "kind": "Encoded Text"
          },
          {
            "description": "0: url safe encoding ()\n1: base64 encoding\n2: replace only",
            "name": "Mode",
            "nickname": "Mo",
            "kind": "Mode"
          },
          {
            "description": "Placeholder text that was used to encode forbidden text after encoding and is restored before decoding. It will be applied sequentially. Make sure to invert the order of your original list.",
            "name": "Replace",
            "nickname": "Re",
            "kind": "Replace"
          },
          {
            "description": "Original forbidden text to restore from replaced before decoding. It will be applied sequentially. Make sure to invert the order of your original list.",
            "name": "Original",
            "nickname": "Or",
            "kind": "Original"
          }
        ],
        "outputs": [
          {
            "description": "Decoded text.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Encode Text",
        "description": "Encode a text.",
        "nickname": ">Txt",
        "inputs": [
          {
            "description": "Text to encode.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          },
          {
            "description": "0: url safe encoding ()\n1: base64 encoding\n2: replace only",
            "name": "Mode",
            "nickname": "Mo",
            "kind": "Mode"
          },
          {
            "description": "Forbidden text that will be replaced after encoding.",
            "name": "Forbidden",
            "nickname": "Fb",
            "kind": "Forbidden"
          },
          {
            "description": "Placeholder text that replaces the forbidden text after encoding.",
            "name": "Replace",
            "nickname": "Re",
            "kind": "Replace"
          }
        ],
        "outputs": [
          {
            "description": "Encoded text.",
            "name": "Encoded Text",
            "nickname": "En",
            "kind": "Encoded Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Normalize Text",
        "description": "Normalizes a text to different formats.",
        "nickname": "\u21d2Txt",
        "inputs": [
          {
            "description": "Text to normalize.",
            "name": "Text",
            "nickname": "Txt",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "Strictly alphanumerical text that either strips characters or turn them into underscores.",
            "name": "Strict",
            "nickname": "St",
            "kind": "Strict"
          },
          {
            "description": "Titelized text by capitalizing and unifying casing.",
            "name": "Title",
            "nickname": "Ti",
            "kind": "Title"
          },
          {
            "description": "Underscorized text by lowercasing everything and replacing spaces with underscores.",
            "name": "Underscore",
            "nickname": "Un",
            "kind": "Underscore"
          },
          {
            "description": "Kebaberized text by lowercasing everything and replacing spaces with dashes.",
            "name": "Kebab",
            "nickname": "Kb",
            "kind": "Kebab"
          },
          {
            "description": "Pascalized text by capitalizing and removing spaces.",
            "name": "Pascal",
            "nickname": "Pa",
            "kind": "Pascal"
          }
        ],
        "icon": ""
      },
      {
        "name": "Truncate Text",
        "description": "Truncates text by length and an optional termination.",
        "nickname": "\u2026Txt",
        "inputs": [
          {
            "description": "Text to truncate.",
            "name": "Text",
            "nickname": "Txt",
            "kind": "Text"
          },
          {
            "description": "Maximum length of the text.",
            "name": "Length",
            "nickname": "Le",
            "kind": "Length"
          },
          {
            "description": "Optional termination to append to the truncated text.",
            "name": "Termination",
            "nickname": "Tr",
            "kind": "Termination"
          }
        ],
        "outputs": [
          {
            "description": "Fixed length truncated text including the truncation text length.",
            "name": "Strict",
            "nickname": "St",
            "kind": "Strict"
          },
          {
            "description": "Fixed alphanumeric character length truncated text including the truncation text length",
            "name": "Characters",
            "nickname": "Crs",
            "kind": "Characters"
          },
          {
            "description": "Fixed word length truncated text.",
            "name": "Words",
            "nickname": "Wds",
            "kind": "Words"
          }
        ],
        "icon": ""
      },
      {
        "name": "Objects to Text",
        "description": "Converts a list of objects to a human-readable text.",
        "nickname": "Objs\u2192Txt",
        "inputs": [
          {
            "description": "Objects to humanize.",
            "name": "Objects",
            "nickname": "Ob+",
            "kind": "Objects"
          }
        ],
        "outputs": [
          {
            "description": "Human-readable text.",
            "name": "Humanized Text",
            "nickname": "Tx",
            "kind": "Humanized Text"
          }
        ],
        "icon": ""
      }
    ],
    "2": [
      {
        "name": "Serialize Kit",
        "description": "Serialize a kit.",
        "nickname": ">Kit",
        "inputs": [
          {
            "description": "The kit to serialize.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "The optional indent unit for the serialized kit. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Kit.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Design",
        "description": "Serialize a design.",
        "nickname": ">Dsn",
        "inputs": [
          {
            "description": "The design to serialize.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "The optional indent unit for the serialized design. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Design.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Type",
        "description": "Serialize a type.",
        "nickname": ">Typ",
        "inputs": [
          {
            "description": "The type to serialize.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "The optional indent unit for the serialized type. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Type.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Connection",
        "description": "Serialize a connection.",
        "nickname": ">Con",
        "inputs": [
          {
            "description": "The connection to serialize.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          },
          {
            "description": "The optional indent unit for the serialized connection. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Connection.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Piece",
        "description": "Serialize a piece.",
        "nickname": ">Pce",
        "inputs": [
          {
            "description": "The piece to serialize.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "The optional indent unit for the serialized piece. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Piece.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Port",
        "description": "Serialize a port.",
        "nickname": ">Por",
        "inputs": [
          {
            "description": "The port to serialize.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          },
          {
            "description": "The optional indent unit for the serialized port. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Port.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Representation",
        "description": "Serialize a representation.",
        "nickname": ">Rep",
        "inputs": [
          {
            "description": "The representation to serialize.",
            "name": "Representation",
            "nickname": "Rp",
            "kind": "Representation"
          },
          {
            "description": "The optional indent unit for the serialized representation. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Representation.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Attribute",
        "description": "Serialize a attribute.",
        "nickname": ">Atr",
        "inputs": [
          {
            "description": "The attribute to serialize.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          },
          {
            "description": "The optional indent unit for the serialized attribute. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Attribute.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Coord",
        "description": "Serialize a coord.",
        "nickname": ">DPt",
        "inputs": [
          {
            "description": "The coord to serialize.",
            "name": "Coord",
            "nickname": "DP",
            "kind": "Coord"
          },
          {
            "description": "The optional indent unit for the serialized coord. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Coord.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Location",
        "description": "Serialize a location.",
        "nickname": ">Loc",
        "inputs": [
          {
            "description": "The location to serialize.",
            "name": "Location",
            "nickname": "Lc",
            "kind": "Location"
          },
          {
            "description": "The optional indent unit for the serialized location. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Location.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      },
      {
        "name": "Serialize Author",
        "description": "Serialize a author.",
        "nickname": ">Aut",
        "inputs": [
          {
            "description": "The author to serialize.",
            "name": "Author",
            "nickname": "Au",
            "kind": "Author"
          },
          {
            "description": "The optional indent unit for the serialized author. Empty text for no indent or spaces or tabs",
            "name": "Indent",
            "nickname": "In?",
            "kind": "Indent"
          }
        ],
        "outputs": [
          {
            "description": "Text of serialized Author.",
            "name": "Text",
            "nickname": "Tx",
            "kind": "Text"
          }
        ],
        "icon": ""
      }
    ]
  },
  "Modeling": {
    "1": [
      {
        "name": "Model Kit",
        "description": "Construct, deconstruct or modify a kit",
        "nickname": "~Kit",
        "inputs": [
          {
            "description": "The optional kit to deconstruct or modify.",
            "name": "Kit",
            "nickname": "Kt?",
            "kind": "Kit"
          },
          {
            "description": "Whether the kit should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The name of the kit.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the kit.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional url of the preview image of the kit. The url must point to a landscape image [ png | jpg | svg ] which will be cropped by a 2x1 rectangle. The image must be at least 1920x960 pixels and smaller than 15 MB.",
            "name": "Preview",
            "nickname": "Pv?",
            "kind": "Preview"
          },
          {
            "description": "The optional version of the kit. No version means the latest version.",
            "name": "Version",
            "nickname": "Vr?",
            "kind": "Version"
          },
          {
            "description": "The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
            "name": "Remote",
            "nickname": "Rm?",
            "kind": "Remote"
          },
          {
            "description": "The optional Unique Resource Locator (URL) of the homepage of the kit.",
            "name": "Homepage",
            "nickname": "Hp?",
            "kind": "Homepage"
          },
          {
            "description": "The optional license [ spdx id | url ] of the kit.",
            "name": "License",
            "nickname": "Li?",
            "kind": "License"
          },
          {
            "description": "The optional types of the kit.",
            "name": "Types",
            "nickname": "Ty*",
            "kind": "Types"
          },
          {
            "description": "The optional designs of the kit.",
            "name": "Designs",
            "nickname": "Dn*",
            "kind": "Designs"
          },
          {
            "description": "The optional attributes of the kit.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified kit.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "True if the kit is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The name of the kit.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the kit.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the kit. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional url of the preview image of the kit. The url must point to a landscape image [ png | jpg | svg ] which will be cropped by a 2x1 rectangle. The image must be at least 1920x960 pixels and smaller than 15 MB.",
            "name": "Preview",
            "nickname": "Pv?",
            "kind": "Preview"
          },
          {
            "description": "The optional version of the kit. No version means the latest version.",
            "name": "Version",
            "nickname": "Vr?",
            "kind": "Version"
          },
          {
            "description": "The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
            "name": "Remote",
            "nickname": "Rm?",
            "kind": "Remote"
          },
          {
            "description": "The optional Unique Resource Locator (URL) of the homepage of the kit.",
            "name": "Homepage",
            "nickname": "Hp?",
            "kind": "Homepage"
          },
          {
            "description": "The optional license [ spdx id | url ] of the kit.",
            "name": "License",
            "nickname": "Li?",
            "kind": "License"
          },
          {
            "description": "The optional types of the kit.",
            "name": "Types",
            "nickname": "Ty*",
            "kind": "Types"
          },
          {
            "description": "The optional designs of the kit.",
            "name": "Designs",
            "nickname": "Dn*",
            "kind": "Designs"
          },
          {
            "description": "The optional attributes of the kit.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Design",
        "description": "Construct, deconstruct or modify a design",
        "nickname": "~Dsn",
        "inputs": [
          {
            "description": "The optional design to deconstruct or modify.",
            "name": "Design",
            "nickname": "Dn?",
            "kind": "Design"
          },
          {
            "description": "Whether the design should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The name of the design.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the design.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional variant of the design. No variant means the default variant.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional view of the design. No view means the default view.",
            "name": "View",
            "nickname": "Vw?",
            "kind": "View"
          },
          {
            "description": "The optional location of the design.",
            "name": "Location",
            "nickname": "Lo?",
            "kind": "Location"
          },
          {
            "description": "The length unit for all distance-related information of the design.",
            "name": "Unit",
            "nickname": "Ut",
            "kind": "Unit"
          },
          {
            "description": "The optional pieces of the design.",
            "name": "Pieces",
            "nickname": "Pc*",
            "kind": "Pieces"
          },
          {
            "description": "The optional connections of the design.",
            "name": "Connections",
            "nickname": "Co*",
            "kind": "Connections"
          },
          {
            "description": "The optional authors of the design.",
            "name": "Authors",
            "nickname": "Au*",
            "kind": "Authors"
          },
          {
            "description": "The optional attributes of the design.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified design.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "True if the design is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The name of the design.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the design.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the design. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional variant of the design. No variant means the default variant.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional view of the design. No view means the default view.",
            "name": "View",
            "nickname": "Vw?",
            "kind": "View"
          },
          {
            "description": "The optional location of the design.",
            "name": "Location",
            "nickname": "Lo?",
            "kind": "Location"
          },
          {
            "description": "The length unit for all distance-related information of the design.",
            "name": "Unit",
            "nickname": "Ut",
            "kind": "Unit"
          },
          {
            "description": "The optional pieces of the design.",
            "name": "Pieces",
            "nickname": "Pc*",
            "kind": "Pieces"
          },
          {
            "description": "The optional connections of the design.",
            "name": "Connections",
            "nickname": "Co*",
            "kind": "Connections"
          },
          {
            "description": "The optional authors of the design.",
            "name": "Authors",
            "nickname": "Au*",
            "kind": "Authors"
          },
          {
            "description": "The optional attributes of the design.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Type",
        "description": "Construct, deconstruct or modify a type",
        "nickname": "~Typ",
        "inputs": [
          {
            "description": "The optional type to deconstruct or modify.",
            "name": "Type",
            "nickname": "Ty?",
            "kind": "Type"
          },
          {
            "description": "Whether the type should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The name of the type.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the type.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional variant of the type. No variant means the default variant. ",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
            "name": "Stock",
            "nickname": "St?",
            "kind": "Stock"
          },
          {
            "description": "Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
            "name": "Virtual",
            "nickname": "Vi?",
            "kind": "Virtual"
          },
          {
            "description": "The optional location of the type.",
            "name": "Location",
            "nickname": "Lo?",
            "kind": "Location"
          },
          {
            "description": "The length unit of the point and the direction of the ports of the type.",
            "name": "Unit",
            "nickname": "Ut",
            "kind": "Unit"
          },
          {
            "description": "The optional representations of the type.",
            "name": "Representations",
            "nickname": "Rp*",
            "kind": "Representations"
          },
          {
            "description": "The optional ports of the type.",
            "name": "Ports",
            "nickname": "Po*",
            "kind": "Ports"
          },
          {
            "description": "The optional authors of the type.",
            "name": "Authors",
            "nickname": "Au*",
            "kind": "Authors"
          },
          {
            "description": "The optional attributes of the type.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified type.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "True if the type is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The name of the type.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional human-readable description of the type.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional icon [ emoji | logogram | url ] of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 256x256 pixels and smaller than 1 MB.",
            "name": "Icon",
            "nickname": "Ic?",
            "kind": "Icon"
          },
          {
            "description": "The optional url to the image of the type. The url must point to a quadratic image [ png | jpg | svg ] which will be cropped by a circle. The image must be at least 720x720 pixels and smaller than 5 MB.",
            "name": "Image",
            "nickname": "Im?",
            "kind": "Image"
          },
          {
            "description": "The optional variant of the type. No variant means the default variant. ",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional number of items in stock. 2147483647 (=2^31-1) means infinite stock.",
            "name": "Stock",
            "nickname": "St?",
            "kind": "Stock"
          },
          {
            "description": "Whether the type is virtual. A virtual type is not physically present but is used in conjunction with other virtual types to form a larger physical type.",
            "name": "Virtual",
            "nickname": "Vi?",
            "kind": "Virtual"
          },
          {
            "description": "The optional location of the type.",
            "name": "Location",
            "nickname": "Lo?",
            "kind": "Location"
          },
          {
            "description": "The length unit of the point and the direction of the ports of the type.",
            "name": "Unit",
            "nickname": "Ut",
            "kind": "Unit"
          },
          {
            "description": "The optional representations of the type.",
            "name": "Representations",
            "nickname": "Rp*",
            "kind": "Representations"
          },
          {
            "description": "The optional ports of the type.",
            "name": "Ports",
            "nickname": "Po*",
            "kind": "Ports"
          },
          {
            "description": "The optional authors of the type.",
            "name": "Authors",
            "nickname": "Au*",
            "kind": "Authors"
          },
          {
            "description": "The optional attributes of the type.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Connection",
        "description": "Construct, deconstruct or modify a connection",
        "nickname": "~Con",
        "inputs": [
          {
            "description": "The optional connection to deconstruct or modify.",
            "name": "Connection",
            "nickname": "Co?",
            "kind": "Connection"
          },
          {
            "description": "Whether the connection should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "Id of the connected piece.",
            "name": "Connected Piece Id",
            "nickname": "CdPc",
            "kind": "Connected Piece Id"
          },
          {
            "description": "Optional id of the port of type of the piece. Otherwise the default port will be selected.",
            "name": "Connected Piece Type Port Id",
            "nickname": "CdPo?",
            "kind": "Connected Piece Type Port Id"
          },
          {
            "description": "Id of the connected piece.",
            "name": "Connecting Piece Id",
            "nickname": "CgPc",
            "kind": "Connecting Piece Id"
          },
          {
            "description": "Optional id of the port of type of the piece. Otherwise the default port will be selected.",
            "name": "Connecting Piece Type Port Id",
            "nickname": "CgPo?",
            "kind": "Connecting Piece Type Port Id"
          },
          {
            "description": "The optional human-readable description of the connection.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece.",
            "name": "Gap",
            "nickname": "Gp?",
            "kind": "Gap"
          },
          {
            "description": "The optional lateral shift (applied after rotation and tilt in port direction) between the connected and the connecting piece.",
            "name": "Shift",
            "nickname": "Sf?",
            "kind": "Shift"
          },
          {
            "description": "The optional vertical rise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
            "name": "Rise",
            "nickname": "Rs?",
            "kind": "Rise"
          },
          {
            "description": "The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
            "name": "Rotation",
            "nickname": "Rt?",
            "kind": "Rotation"
          },
          {
            "description": "The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
            "name": "Turn",
            "nickname": "Tu?",
            "kind": "Turn"
          },
          {
            "description": "The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
            "name": "Tilt",
            "nickname": "Tl?",
            "kind": "Tilt"
          },
          {
            "description": "The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "X",
            "nickname": "X?",
            "kind": "X"
          },
          {
            "description": "The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "Y",
            "nickname": "Y?",
            "kind": "Y"
          },
          {
            "description": "The optional attributes of the connection.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified connection.",
            "name": "Connection",
            "nickname": "Co",
            "kind": "Connection"
          },
          {
            "description": "True if the connection is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "Id of the connected piece.",
            "name": "Connected Piece Id",
            "nickname": "CdPc",
            "kind": "Connected Piece Id"
          },
          {
            "description": "Optional id of the port of type of the piece. Otherwise the default port will be selected.",
            "name": "Connected Piece Type Port Id",
            "nickname": "CdPo?",
            "kind": "Connected Piece Type Port Id"
          },
          {
            "description": "Id of the connected piece.",
            "name": "Connecting Piece Id",
            "nickname": "CgPc",
            "kind": "Connecting Piece Id"
          },
          {
            "description": "Optional id of the port of type of the piece. Otherwise the default port will be selected.",
            "name": "Connecting Piece Type Port Id",
            "nickname": "CgPo?",
            "kind": "Connecting Piece Type Port Id"
          },
          {
            "description": "The optional human-readable description of the connection.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional longitudinal gap (applied after rotation and tilt in port direction) between the connected and the connecting piece.",
            "name": "Gap",
            "nickname": "Gp?",
            "kind": "Gap"
          },
          {
            "description": "The optional lateral shift (applied after rotation and tilt in port direction) between the connected and the connecting piece.",
            "name": "Shift",
            "nickname": "Sf?",
            "kind": "Shift"
          },
          {
            "description": "The optional vertical rise in port direction between the connected and the connecting piece. Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
            "name": "Rise",
            "nickname": "Rs?",
            "kind": "Rise"
          },
          {
            "description": "The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
            "name": "Rotation",
            "nickname": "Rt?",
            "kind": "Rotation"
          },
          {
            "description": "The optional turn perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.  Set this only when necessary as it is not a symmetric property which means that when the parent piece and child piece are flipped it yields a different result.",
            "name": "Turn",
            "nickname": "Tu?",
            "kind": "Turn"
          },
          {
            "description": "The optional horizontal tilt perpendicular to the port direction (applied after rotation and the turn) between the connected and the connecting piece in degrees.",
            "name": "Tilt",
            "nickname": "Tl?",
            "kind": "Tilt"
          },
          {
            "description": "The optional offset in x direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "X",
            "nickname": "X?",
            "kind": "X"
          },
          {
            "description": "The optional offset in y direction between the icons of the child and the parent piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "Y",
            "nickname": "Y?",
            "kind": "Y"
          },
          {
            "description": "The optional attributes of the connection.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Piece",
        "description": "Construct, deconstruct or modify a piece",
        "nickname": "~Pce",
        "inputs": [
          {
            "description": "The optional piece to deconstruct or modify.",
            "name": "Piece",
            "nickname": "Pc?",
            "kind": "Piece"
          },
          {
            "description": "Whether the piece should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "Id of the piece.",
            "name": "Id",
            "nickname": "Id",
            "kind": "Id"
          },
          {
            "description": "The optional human-readable description of the piece.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "Name of the type of the piece.",
            "name": "Type Name",
            "nickname": "Na",
            "kind": "Type Name"
          },
          {
            "description": "The optional variant of the type of the piece. No variant means the default variant.",
            "name": "Type Variant",
            "nickname": "Vn?",
            "kind": "Type Variant"
          },
          {
            "description": "The optional plane of the piece. When pieces are connected only one piece can have a plane.",
            "name": "Plane",
            "nickname": "Pn?",
            "kind": "Plane"
          },
          {
            "description": "The optional center of the piece in the diagram. When pieces are connected only one piece can have a center.",
            "name": "Center",
            "nickname": "Ce?",
            "kind": "Center"
          },
          {
            "description": "Whether the piece is hidden. A hidden piece is not visible in the model.",
            "name": "Hidden",
            "nickname": "Hi?",
            "kind": "Hidden"
          },
          {
            "description": "Whether the piece is locked. A locked piece cannot be edited.",
            "name": "Locked",
            "nickname": "Lk?",
            "kind": "Locked"
          },
          {
            "description": "The optional attributes of the piece.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified piece.",
            "name": "Piece",
            "nickname": "Pc",
            "kind": "Piece"
          },
          {
            "description": "True if the piece is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "Id of the piece.",
            "name": "Id",
            "nickname": "Id",
            "kind": "Id"
          },
          {
            "description": "The optional human-readable description of the piece.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "Name of the type of the piece.",
            "name": "Type Name",
            "nickname": "Na",
            "kind": "Type Name"
          },
          {
            "description": "The optional variant of the type of the piece. No variant means the default variant.",
            "name": "Type Variant",
            "nickname": "Vn?",
            "kind": "Type Variant"
          },
          {
            "description": "The optional plane of the piece. When pieces are connected only one piece can have a plane.",
            "name": "Plane",
            "nickname": "Pn?",
            "kind": "Plane"
          },
          {
            "description": "The optional center of the piece in the diagram. When pieces are connected only one piece can have a center.",
            "name": "Center",
            "nickname": "Ce?",
            "kind": "Center"
          },
          {
            "description": "Whether the piece is hidden. A hidden piece is not visible in the model.",
            "name": "Hidden",
            "nickname": "Hi?",
            "kind": "Hidden"
          },
          {
            "description": "Whether the piece is locked. A locked piece cannot be edited.",
            "name": "Locked",
            "nickname": "Lk?",
            "kind": "Locked"
          },
          {
            "description": "The optional attributes of the piece.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Port",
        "description": "Construct, deconstruct or modify a port",
        "nickname": "~Por",
        "inputs": [
          {
            "description": "The optional port to deconstruct or modify.",
            "name": "Port",
            "nickname": "Po?",
            "kind": "Port"
          },
          {
            "description": "Whether the port should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The optional local identifier of the port within the type. No id means the default port.",
            "name": "Id",
            "nickname": "Id?",
            "kind": "Id"
          },
          {
            "description": "The optional human-readable description of the port.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "Whether the port is mandatory. A mandatory port must be connected in a design.",
            "name": "Mandatory",
            "nickname": "Ma?",
            "kind": "Mandatory"
          },
          {
            "description": "The optional family of the port. This allows to define explicit compatibility with other ports.",
            "name": "Family",
            "nickname": "Fa?",
            "kind": "Family"
          },
          {
            "description": "The optional other compatible families of the port. An empty list means this port is compatible with all other ports.",
            "name": "CompatibleFamilies",
            "nickname": "CF*",
            "kind": "CompatibleFamilies"
          },
          {
            "description": "The connection point of the port that is attracted to another connection point.",
            "name": "Point",
            "nickname": "Pt",
            "kind": "Point"
          },
          {
            "description": "The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned.",
            "name": "Direction",
            "nickname": "Dr",
            "kind": "Direction"
          },
          {
            "description": "The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
            "name": "T",
            "nickname": "T",
            "kind": "T"
          },
          {
            "description": "The optional attributes of the port.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified port.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          },
          {
            "description": "True if the port is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The optional local identifier of the port within the type. No id means the default port.",
            "name": "Id",
            "nickname": "Id?",
            "kind": "Id"
          },
          {
            "description": "The optional human-readable description of the port.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "Whether the port is mandatory. A mandatory port must be connected in a design.",
            "name": "Mandatory",
            "nickname": "Ma?",
            "kind": "Mandatory"
          },
          {
            "description": "The optional family of the port. This allows to define explicit compatibility with other ports.",
            "name": "Family",
            "nickname": "Fa?",
            "kind": "Family"
          },
          {
            "description": "The optional other compatible families of the port. An empty list means this port is compatible with all other ports.",
            "name": "CompatibleFamilies",
            "nickname": "CF*",
            "kind": "CompatibleFamilies"
          },
          {
            "description": "The connection point of the port that is attracted to another connection point.",
            "name": "Point",
            "nickname": "Pt",
            "kind": "Point"
          },
          {
            "description": "The direction of the port. When another piece connects the direction of the other port is flipped and then the pieces are aligned.",
            "name": "Direction",
            "nickname": "Dr",
            "kind": "Direction"
          },
          {
            "description": "The parameter t [0,1[ where the port will be shown on the ring of a piece in the diagram. It starts at 12 o`clock and turns clockwise.",
            "name": "T",
            "nickname": "T",
            "kind": "T"
          },
          {
            "description": "The optional attributes of the port.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Representation",
        "description": "Construct, deconstruct or modify a representation",
        "nickname": "~Rep",
        "inputs": [
          {
            "description": "The optional representation to deconstruct or modify.",
            "name": "Representation",
            "nickname": "Rp?",
            "kind": "Representation"
          },
          {
            "description": "Whether the representation should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "The optional human-readable description of the representation.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "The optional attributes of the representation.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified representation.",
            "name": "Representation",
            "nickname": "Rp",
            "kind": "Representation"
          },
          {
            "description": "True if the representation is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "The optional human-readable description of the representation.",
            "name": "Description",
            "nickname": "Dc?",
            "kind": "Description"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "The optional attributes of the representation.",
            "name": "Attributes",
            "nickname": "At*",
            "kind": "Attributes"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Attribute",
        "description": "Construct, deconstruct or modify a attribute",
        "nickname": "~Atr",
        "inputs": [
          {
            "description": "The optional attribute to deconstruct or modify.",
            "name": "Attribute",
            "nickname": "At?",
            "kind": "Attribute"
          },
          {
            "description": "Whether the attribute should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The name of the attribute.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value [ text | url ] of the attribute. No value is equivalent to true.",
            "name": "Value",
            "nickname": "Vl?",
            "kind": "Value"
          },
          {
            "description": "The optional unit of the value of the attribute.",
            "name": "Unit",
            "nickname": "Ut?",
            "kind": "Unit"
          },
          {
            "description": "The optional definition [ text | uri ] of the attribute.",
            "name": "Definition",
            "nickname": "Df?",
            "kind": "Definition"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified attribute.",
            "name": "Attribute",
            "nickname": "At",
            "kind": "Attribute"
          },
          {
            "description": "True if the attribute is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The name of the attribute.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value [ text | url ] of the attribute. No value is equivalent to true.",
            "name": "Value",
            "nickname": "Vl?",
            "kind": "Value"
          },
          {
            "description": "The optional unit of the value of the attribute.",
            "name": "Unit",
            "nickname": "Ut?",
            "kind": "Unit"
          },
          {
            "description": "The optional definition [ text | uri ] of the attribute.",
            "name": "Definition",
            "nickname": "Df?",
            "kind": "Definition"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Coord",
        "description": "Construct, deconstruct or modify a coord",
        "nickname": "~DPt",
        "inputs": [
          {
            "description": "The optional coord to deconstruct or modify.",
            "name": "Coord",
            "nickname": "DP?",
            "kind": "Coord"
          },
          {
            "description": "Whether the coord should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "X",
            "nickname": "X",
            "kind": "X"
          },
          {
            "description": "The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "Y",
            "nickname": "Y",
            "kind": "Y"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified coord.",
            "name": "Coord",
            "nickname": "DP",
            "kind": "Coord"
          },
          {
            "description": "True if the coord is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The x-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "X",
            "nickname": "X",
            "kind": "X"
          },
          {
            "description": "The y-coordinate of the icon of the piece in the diagram. One unit is equal the width of a piece icon.",
            "name": "Y",
            "nickname": "Y",
            "kind": "Y"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Location",
        "description": "Construct, deconstruct or modify a location",
        "nickname": "~Loc",
        "inputs": [
          {
            "description": "The optional location to deconstruct or modify.",
            "name": "Location",
            "nickname": "Lc?",
            "kind": "Location"
          },
          {
            "description": "Whether the location should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The longitude of the location in degrees.",
            "name": "Longitude",
            "nickname": "Lo",
            "kind": "Longitude"
          },
          {
            "description": "The latitude of the location in degrees.",
            "name": "Latitude",
            "nickname": "La",
            "kind": "Latitude"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified location.",
            "name": "Location",
            "nickname": "Lc",
            "kind": "Location"
          },
          {
            "description": "True if the location is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The longitude of the location in degrees.",
            "name": "Longitude",
            "nickname": "Lo",
            "kind": "Longitude"
          },
          {
            "description": "The latitude of the location in degrees.",
            "name": "Latitude",
            "nickname": "La",
            "kind": "Latitude"
          }
        ],
        "icon": ""
      },
      {
        "name": "Model Author",
        "description": "Construct, deconstruct or modify an author",
        "nickname": "~Aut",
        "inputs": [
          {
            "description": "The optional author to deconstruct or modify.",
            "name": "Author",
            "nickname": "Au?",
            "kind": "Author"
          },
          {
            "description": "Whether the author should be validated.",
            "name": "Validate",
            "nickname": "Vd?",
            "kind": "Validate"
          },
          {
            "description": "The name of the author.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The email of the author.",
            "name": "Email",
            "nickname": "Em",
            "kind": "Email"
          }
        ],
        "outputs": [
          {
            "description": "The constructed or modified author.",
            "name": "Author",
            "nickname": "Au",
            "kind": "Author"
          },
          {
            "description": "True if the author is valid. Null if no validation was performed.",
            "name": "Valid",
            "nickname": "Vd?",
            "kind": "Valid"
          },
          {
            "description": "The name of the author.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The email of the author.",
            "name": "Email",
            "nickname": "Em",
            "kind": "Email"
          }
        ],
        "icon": ""
      }
    ]
  },
  "Integrations": {
    "1": [
      {
        "name": "Design to Block",
        "description": "Bake the design to blocks: by selecting a representation with mime and tags and turn it to block-definitions and flatten the design and turn every piece into a block-definition with the plane as it transform.",
        "icon": "icon",
        "nickname": "Dsn\u2192Bl",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Ob",
            "kind": "Data"
          },
          {
            "description": "The Multipurpose Internet Mail Extensions (MIME) type of the content of the file of the representation.",
            "name": "Mime",
            "nickname": "Mm",
            "kind": "Mime"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of model block definitions",
            "name": "Model Block Definition",
            "nickname": "Block Definition",
            "kind": "Model Block Definition"
          },
          {
            "description": "Contains a collection of block instances",
            "name": "Block Instance",
            "nickname": "Block Instance",
            "kind": "Block Instance"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ]
      },
      {
        "name": "Pieces to Group",
        "description": "Convert every piece to a group. If you need more a sophisticated approach where you can switch between represenstations and don't waste space use: Design to Block",
        "icon": "icon",
        "nickname": "\u2192Grp",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of geometric groups",
            "name": "Group",
            "nickname": "Gr",
            "kind": "Group"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of geometric groups",
            "name": "Group",
            "nickname": "Gr",
            "kind": "Group"
          }
        ]
      }
    ],
    "2": [
      {
        "name": "GitHub Kit",
        "description": "Get the uri and the homepage of the remote kit of a specific version (either a branch name, a tag name or a commit sha) for a kit hosted as a repository on GitHub. If you don't want the main branch, you have to clear the branch param.",
        "icon": "icon",
        "nickname": "GHbKit",
        "inputs": [
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Domain",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Account",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Repo",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Branch",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Tag",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Commit",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
            "name": "Remote",
            "nickname": "Rm?",
            "kind": "Remote"
          },
          {
            "description": "The optional Unique Resource Locator (URL) of the homepage of the kit.",
            "name": "Homepage",
            "nickname": "Hp?",
            "kind": "Homepage"
          }
        ]
      },
      {
        "name": "GitLab Kit",
        "description": "Get the uri and the homepage of the remote kit of a specific version (either a branch name, a tag name or a commit sha) for a kit hosted as a repository on GitLab. If you don't want the main branch, you have to clear the branch param.",
        "icon": "icon",
        "nickname": "GLbKit",
        "inputs": [
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Domain",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Account",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Repo",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Branch",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Tag",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Commit",
            "kind": "Text"
          }
        ],
        "outputs": [
          {
            "description": "The optional Unique Resource Locator (URL) where to fetch the kit remotely.",
            "name": "Remote",
            "nickname": "Rm?",
            "kind": "Remote"
          },
          {
            "description": "The optional Unique Resource Locator (URL) of the homepage of the kit.",
            "name": "Homepage",
            "nickname": "Hp?",
            "kind": "Homepage"
          }
        ]
      }
    ],
    "3": [
      {
        "name": "Type to PART",
        "description": "Convert a semio type to a Wasp PART. In semio connections are parametric (rotation, gap, tilt, shift) which can't be translated because Wasp CONN are statically defined by a plane. You can lock this degree of freedom by providing an additional rotation to each port. @devs If you want to debug this cluster, lock the solver (otherwise your Rhino might crash due to a Grasshopper bug) and look at the instructions inside. Password: debug",
        "icon": "icon",
        "nickname": "Typ\u2192PART",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Ob",
            "kind": "Data"
          },
          {
            "description": "The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
            "name": "Rotation",
            "nickname": "Rt?",
            "kind": "Rotation"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "RULES",
            "kind": "Data"
          },
          {
            "description": "OPTIONAL // Custom connection grammar with format \"ConnType\">\"ConnType\"",
            "name": "GR",
            "nickname": "GR",
            "kind": "GR"
          }
        ]
      },
      {
        "name": "Filter PART",
        "description": "Filter PARTs with indices. RULEs are also filtered to only include those with filtered PARTs.",
        "icon": "icon",
        "nickname": "|PART",
        "inputs": [
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "RULES",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of integer numbers",
            "name": "Integer",
            "nickname": "i",
            "kind": "Integer"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "RULES",
            "kind": "Data"
          }
        ]
      },
      {
        "name": "AGGR to Design",
        "description": "Convert a Wasp aggregation (AGGR) to a semio design.",
        "icon": "icon",
        "nickname": "AGGR\u2192Dsn",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "AGGR",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART_OUT",
            "kind": "Data"
          },
          {
            "description": "The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
            "name": "Rotation",
            "nickname": "Rt?",
            "kind": "Rotation"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      },
      {
        "name": "Design to AGGR",
        "description": "Convert a semio design to a Wasp aggregation (AGGR).",
        "icon": "icon",
        "nickname": "Dsn\u2192AGGR",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART",
            "kind": "Data"
          },
          {
            "description": "The optional horizontal rotation in port direction between the connected and the connecting piece in degrees.",
            "name": "Rotation",
            "nickname": "Rt?",
            "kind": "Rotation"
          },
          {
            "description": "Recompute the whole aggregation",
            "name": "RESET",
            "nickname": "RESET",
            "kind": "RESET"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "AGGR",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART_OUT",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "PART_OUT_FLAT",
            "kind": "Data"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "GR",
            "kind": "Text"
          }
        ]
      }
    ],
    "4": [
      {
        "name": "Types to Modules",
        "description": "Convert semio types to Monoceros modules.",
        "icon": "icon",
        "nickname": "\u2192Mods",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty+",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Ob",
            "kind": "Data"
          },
          {
            "description": "Vector specifying single Module Part dimensionsin base-plane-aligned XYZ axes. The Module Part Diagonal must match Envelope's Slot diagonals.",
            "name": "Module Part Diagonal",
            "nickname": "D",
            "kind": "Module Part Diagonal"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of Monoceros Modules.",
            "name": "Module",
            "nickname": "M",
            "kind": "Module"
          },
          {
            "description": "Contains a collection of Monoceros Rules.",
            "name": "Rule",
            "nickname": "R",
            "kind": "Rule"
          }
        ]
      },
      {
        "name": "Slots to Design",
        "description": "Convert Monoceros slots to a semio design.",
        "icon": "icon",
        "nickname": "Slts\u2192",
        "inputs": [
          {
            "description": "Contains a collection of Monoceros Slots.",
            "name": "Slot",
            "nickname": "S",
            "kind": "Slot"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          }
        ]
      }
    ]
  },
  "Display": {
    "1": [
      {
        "name": "Preview Connections",
        "description": "Preview all connections of a design by visualizing the ports of the types and the connection parameters.",
        "icon": "icon",
        "nickname": ":Con",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Sc",
            "kind": "Number"
          }
        ]
      },
      {
        "name": "Preview Design",
        "description": "Preview the pieces and connections of a design.",
        "icon": "icon",
        "nickname": ":Dsn",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Ob",
            "kind": "Data"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Sc",
            "kind": "Number"
          }
        ]
      },
      {
        "name": "Preview Geometry",
        "description": "Preview geometry by ungrouping everything, showing light surfaces and dark edges.",
        "icon": "icon",
        "nickname": ":Geo",
        "inputs": [
          {
            "description": "Contains a collection of generic geometry",
            "name": "Geometry",
            "nickname": "Geo",
            "kind": "Geometry"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Sc",
            "kind": "Number"
          }
        ]
      },
      {
        "name": "Preview Pieces",
        "description": "Preview pieces in a design. Use tags to select matching representations of the types of the pieces.",
        "icon": "icon",
        "nickname": ":Pce",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Ob",
            "kind": "Data"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Sc",
            "kind": "Number"
          }
        ]
      },
      {
        "name": "Preview Port",
        "description": "Preview a port by showing the point and direction and if exists: id, family and compatible families.",
        "icon": "icon",
        "nickname": ":Prv",
        "inputs": [
          {
            "description": "A port is a connection point (with a direction) of a type.",
            "name": "Port",
            "nickname": "Po",
            "kind": "Port"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Sc",
            "kind": "Number"
          }
        ]
      }
    ],
    "2": [
      {
        "name": "Draw Diagram",
        "description": "Draw the diagram of the design.",
        "nickname": ":Dgm",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Types that are used by the pieces in the design.",
            "name": "Types",
            "nickname": "Ty+",
            "kind": "Types"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to create the diagram of the design.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "The diagram as a Scalable Vector Graphics (SVG).",
            "name": "Scalable Vector Graphics",
            "nickname": "SVG",
            "kind": "Scalable Vector Graphics"
          }
        ],
        "icon": ""
      }
    ]
  },
  "Assistant": {
    "1": [
      {
        "name": "Assess Performance",
        "description": "Simple performance assement based on the following attributes of the types (No unit conversion is applied for now, so make sure that all your types have the values with the same unit.): floor area, effective floor area, residents, workspaces, construction cost, maintenance expenses, income, transmission heat loss, ventilation heat loss, cooling energy demand, technical equipment energy demand,construction global warming potential, heating load, cooling load, ventilation air flow volume",
        "icon": "icon",
        "nickname": "!Prf",
        "inputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": null,
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Technical Equipment Cost [\u20ac]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Technical Equipment GWP [kgCO2e]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Ventilation Heat Recovery Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Efficiency Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Primary Energy Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Energy Price [\u20ac/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Global Warming Potential [kgCO2e/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Efficiency Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Primary Energy Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Global Warming Potential [kgCO2e/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Energy Price [\u20ac/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Electrictiy Primary Energy Factor",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Electrictiy Global Warming Potential [kgCO2e/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Electrictiy Energy Price [\u20ac/kWh]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "CO2 Price [\u20ac/tCO2e]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Life Cycle [a]",
            "kind": "Number"
          }
        ],
        "outputs": [
          {
            "description": null,
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Interest [%]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Area Efficiency [eff. m\u00b2/m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Area Comfort [m\u00b2/Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Income[\u20ac/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Expenses [\u20ac/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Energy Expenses [\u20ac/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Effective Floor Area [m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Floor Area [m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Users [Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Construction Cost [\u20ac]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Construction Cost [\u20ac/m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Construction Cost per User [\u20ac/Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Life Cycle Cost [\u20ac]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Life Cycle Cost [\u20ac/m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Life Cycle Cost per User [\u20ac/Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Construction Global Warming Potential [kgCO2e]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Construction Global Warming Potential [kgCO2e/m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Construction Global Warming Potential per User [kgCO2e/Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Life Cycle Global Warming Potential [kgCO2e]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Life Cycle Global Warming Potential [kgCO2e/m\u00b2]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Life Cycle Global Warming Potential per User [kgCO2e/Person]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Primary Energy Demand [kWh/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Primary Energy Demand [kWh/m\u00b2a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Primary Energy Demand per User [kWh/Person a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Final Energy Demand [kWh/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Final Energy Demand [kWh/m\u00b2a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Final Energy Demand per User [kWh/Person a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Load [kW]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Energy Demand [kWh/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Heating Energy Demand [kWh/m\u00b2a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Heating Energy Demand per User [kWh/Person a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Load [kW]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Energy Demand [kWh/a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Specific Cooling Energy Demand [kWh/m\u00b2a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Cooling Energy Demand per User [kWh/Person a]",
            "kind": "Number"
          },
          {
            "description": "Contains a collection of floating point numbers",
            "name": "Number",
            "nickname": "Ventilation Air Flow Volume  [m\u00b3/s]",
            "kind": "Number"
          }
        ]
      },
      {
        "name": "Predict Design",
        "description": "Predict a design.",
        "nickname": "%Dsn",
        "inputs": [
          {
            "description": "The description of the design or an instruction how to change the base design.",
            "name": "Description",
            "nickname": "Dc",
            "kind": "Description"
          },
          {
            "description": "The types to use in the design.",
            "name": "Types",
            "nickname": "Ty+",
            "kind": "Types"
          },
          {
            "description": "The optional design to use a base.",
            "name": "Design",
            "nickname": "Dn?",
            "kind": "Design"
          },
          {
            "description": "True to predict the design.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the design was successfully predicted. False otherwise.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          },
          {
            "description": "Predicted design.",
            "name": "Design",
            "nickname": "Dsn",
            "kind": "Design"
          }
        ],
        "icon": ""
      }
    ]
  },
  "Persistence": {
    "1": [
      {
        "name": "Cache Kit",
        "description": "Cache a kit by downloading the remote kit with all remote representations.",
        "icon": "icon",
        "nickname": "\u2193Kit",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to load the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "Contains a collection of generic data",
            "name": "Data",
            "nickname": "Objects",
            "kind": "Data"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "UrPa",
            "kind": "Url"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "UrPaLc",
            "kind": "Url"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "UrPaRe",
            "kind": "Url"
          }
        ]
      },
      {
        "name": "Cache Representation",
        "description": "Download and cache a remote representation.",
        "nickname": "\u2193Rep",
        "inputs": [
          {
            "description": "Unique Resource Locator (URL) of the remote representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "True to downloaded and cache the remote representation.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "Path to the cached representation.",
            "name": "Path",
            "nickname": "Pa",
            "kind": "Path"
          },
          {
            "description": "True if the representation was successfully downloaded and cached.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Load Design",
        "description": "Load the design. If the representations are urls to files then the objects are loaded for a certain level of details and tags.",
        "icon": "icon",
        "nickname": "/Dsn",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "The name of the design.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value of the design.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The optional view of the design. No view means the default view.",
            "name": "View",
            "nickname": "Vw?",
            "kind": "View"
          },
          {
            "description": "The Multipurpose Internet Mail Extensions (MIME) type of the content of the file of the representation.",
            "name": "Mime",
            "nickname": "Mm",
            "kind": "Mime"
          },
          {
            "description": "The optional Level of Detail/Development/Design (LoD) of the representation. No lod means default.",
            "name": "Lod",
            "nickname": "Ld?",
            "kind": "Lod"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "True to load the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Contains a collection of model objects",
            "name": "Model Object",
            "nickname": "Object",
            "kind": "Model Object"
          },
          {
            "description": "Contains a collection of display materials",
            "name": "Shader",
            "nickname": "Shader",
            "kind": "Shader"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "Contains a collection of file paths",
            "name": "File Path",
            "nickname": "Path",
            "kind": "File Path"
          },
          {
            "description": "Id of the piece.",
            "name": "Id",
            "nickname": "Id",
            "kind": "Id"
          },
          {
            "description": "Contains a collection of three-dimensional axis-systems",
            "name": "Plane",
            "nickname": "Pln",
            "kind": "Plane"
          }
        ]
      },
      {
        "name": "Load Geometry",
        "description": "Load local geometry from absolute file paths to planes.",
        "icon": "icon",
        "nickname": "/Geo",
        "inputs": [
          {
            "description": "Contains a collection of file paths",
            "name": "File Path",
            "nickname": "Path",
            "kind": "File Path"
          },
          {
            "description": "Contains a collection of three-dimensional axis-systems",
            "name": "Plane",
            "nickname": "Pln",
            "kind": "Plane"
          },
          {
            "description": "Contains a collection of boolean values",
            "name": "Boolean",
            "nickname": "Run",
            "kind": "Boolean"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of model objects",
            "name": "Model Object",
            "nickname": "Object",
            "kind": "Model Object"
          },
          {
            "description": "Contains a collection of RGB colours",
            "name": "Colour",
            "nickname": "Col",
            "kind": "Colour"
          },
          {
            "description": "Contains a collection of display materials",
            "name": "Shader",
            "nickname": "Shader",
            "kind": "Shader"
          }
        ]
      },
      {
        "name": "Load Kit",
        "description": "Load a kit.",
        "nickname": "/Kit",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to load the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the kit was successfully loaded. False otherwise.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          },
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "The optional local directory of the kit. This applies to local kits and cached remote kits.",
            "name": "Local Directory",
            "nickname": "Di",
            "kind": "Local Directory"
          }
        ],
        "icon": ""
      },
      {
        "name": "Load Type",
        "description": "Load the type. If the representations are urls to files then the geometry is loaded for a certain level of details and tags.",
        "icon": "icon",
        "nickname": "/Typ",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "The name of the type.",
            "name": "Name",
            "nickname": "Na",
            "kind": "Name"
          },
          {
            "description": "The optional value of the type.",
            "name": "Variant",
            "nickname": "Vn?",
            "kind": "Variant"
          },
          {
            "description": "The Multipurpose Internet Mail Extensions (MIME) type of the content of the resource of the representation.",
            "name": "Mime",
            "nickname": "Mm",
            "kind": "Mime"
          },
          {
            "description": "The optional Level of Detail/Development/Design (LoD) of the representation. No lod means default.",
            "name": "Lod",
            "nickname": "Ld?",
            "kind": "Lod"
          },
          {
            "description": "The optional tags to group representations. No tags means default.",
            "name": "Tags",
            "nickname": "Tg*",
            "kind": "Tags"
          },
          {
            "description": "True to load the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Contains a collection of model objects",
            "name": "Model Object",
            "nickname": "Object",
            "kind": "Model Object"
          },
          {
            "description": "Contains a collection of display materials",
            "name": "Shader",
            "nickname": "Shader",
            "kind": "Shader"
          },
          {
            "description": "The Unique Resource Locator (URL) to the resource of the representation.",
            "name": "Url",
            "nickname": "Ur",
            "kind": "Url"
          },
          {
            "description": "Contains a collection of file paths",
            "name": "File Path",
            "nickname": "Path",
            "kind": "File Path"
          }
        ]
      }
    ],
    "2": [
      {
        "name": "Create Kit",
        "description": "Create a kit.",
        "nickname": "+Kit",
        "inputs": [
          {
            "description": "A kit is a collection of types and designs.",
            "name": "Kit",
            "nickname": "Kt",
            "kind": "Kit"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to create the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the kit was successfully created. False otherwise.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Export Block",
        "description": "Export geometry with layer names to a file.",
        "icon": "icon",
        "nickname": "!Blc",
        "inputs": [
          {
            "description": "Contains a collection of file paths",
            "name": "File Path",
            "nickname": "Path",
            "kind": "File Path"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Name",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of text fragments",
            "name": "Text",
            "nickname": "Url",
            "kind": "Text"
          },
          {
            "description": "Contains a collection of generic geometry",
            "name": "Geometry",
            "nickname": "Geo",
            "kind": "Geometry"
          },
          {
            "description": "Layer name",
            "name": "Name",
            "nickname": "Layer N",
            "kind": "Name"
          },
          {
            "description": "Display Colour",
            "name": "Display Colour",
            "nickname": "Dc",
            "kind": "Display Colour"
          },
          {
            "description": "Contains a collection of boolean values",
            "name": "Boolean",
            "nickname": "Export",
            "kind": "Boolean"
          }
        ],
        "outputs": [
          {
            "description": "Contains a collection of model block definitions",
            "name": "Model Block Definition",
            "nickname": "Block Definition",
            "kind": "Model Block Definition"
          },
          {
            "description": "Contains a collection of file paths",
            "name": "File Path",
            "nickname": "Path",
            "kind": "File Path"
          },
          {
            "description": "Contains a collection of boolean values",
            "name": "Boolean",
            "nickname": "Exported",
            "kind": "Boolean"
          }
        ]
      },
      {
        "name": "Export Geometry",
        "description": "Export geometry to any supported file format. It bakes the geometry to the current layer, runs the Rhino Command and then deletes the geometry again.",
        "icon": "icon",
        "nickname": "!Geo",
        "inputs": [
          {
            "description": "No conversion",
            "name": "F",
            "nickname": "F",
            "kind": "F"
          },
          {
            "description": "Converts to collection of generic geometry",
            "name": "G",
            "nickname": "G",
            "kind": "G"
          },
          {
            "description": "Converts to collection of boolean values",
            "name": "R",
            "nickname": "R",
            "kind": "R"
          }
        ],
        "outputs": [
          {
            "description": "No conversion",
            "name": "S",
            "nickname": "S",
            "kind": "S"
          }
        ]
      },
      {
        "name": "Put Design",
        "description": "Put a design to the kit. If the same design (same name and variant) exists it will be overwritten",
        "nickname": "+Dsn",
        "inputs": [
          {
            "description": "A design is a collection of pieces that are connected.",
            "name": "Design",
            "nickname": "Dn",
            "kind": "Design"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to put the design to the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the design was put to the kit.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Put Type",
        "description": "Put a type to the kit. If the same type (same name and variant) exists it will be overwritten",
        "nickname": "+Typ",
        "inputs": [
          {
            "description": "A type is a reusable element that can be connected with other types over ports.",
            "name": "Type",
            "nickname": "Ty",
            "kind": "Type"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to put the type to the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the type was put to the kit.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Write Text",
        "description": "(Over)write a text to a file.",
        "icon": "icon",
        "nickname": "+Txt",
        "inputs": [
          {
            "description": "Converts to collection of text fragments",
            "name": "T",
            "nickname": "T",
            "kind": "T"
          },
          {
            "description": "Converts to collection of file paths. Ensures paths are absolute based on document location",
            "name": "P",
            "nickname": "P",
            "kind": "P"
          },
          {
            "description": "Converts to collection of boolean values",
            "name": "R",
            "nickname": "R",
            "kind": "R"
          }
        ],
        "outputs": [
          {
            "description": "No conversion",
            "name": "S",
            "nickname": "S",
            "kind": "S"
          }
        ]
      }
    ],
    "3": [
      {
        "name": "Clear Cache",
        "description": "Clear the cache of all the remote kits.",
        "nickname": "-Cac",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of a kit or Unique Resource Locator (URL) of a representation. If None is provided, it will clear the entire cache.",
            "name": "Uri|Url",
            "nickname": "Ur?",
            "kind": "Uri|Url"
          },
          {
            "description": "True to clear the cache.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the cache was successfully cleared.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Delete Kit",
        "description": "Delete a kit.",
        "nickname": "-Kit",
        "inputs": [
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to delete the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the kit was successfully deleted. False otherwise.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Remove Design",
        "description": "Remove a design from a kit.",
        "nickname": "-Dsn",
        "inputs": [
          {
            "description": "Name of the design to remove.",
            "name": "Design Name",
            "nickname": "Na",
            "kind": "Design Name"
          },
          {
            "description": "The optional variant of the design to remove. No variant means the default variant.",
            "name": "Design Variant",
            "nickname": "Vn?",
            "kind": "Design Variant"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to remove the design from the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the design was removed from the kit.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      },
      {
        "name": "Remove Type",
        "description": "Remove a type from a kit.",
        "nickname": "-Typ",
        "inputs": [
          {
            "description": "Name of the type to remove.",
            "name": "Type Name",
            "nickname": "Na",
            "kind": "Type Name"
          },
          {
            "description": "The optional variant of the type to remove. No variant means the default variant.",
            "name": "Type Variant",
            "nickname": "Vn?",
            "kind": "Type Variant"
          },
          {
            "description": "Optional Unique Resource Identifier (URI) of the kit. This can be an absolute path to a local kit or a url to a remote kit.\nIf none is provided, it will try to see if the Grasshopper script is executed inside a local kit.",
            "name": "Uri",
            "nickname": "Ur?",
            "kind": "Uri"
          },
          {
            "description": "True to remove the type from the kit.",
            "name": "Run",
            "nickname": "R",
            "kind": "Run"
          }
        ],
        "outputs": [
          {
            "description": "True if the type was removed from the kit.",
            "name": "Success",
            "nickname": "Sc",
            "kind": "Success"
          }
        ],
        "icon": ""
      }
    ],
    "4": [
      {
        "name": "Directory",
        "description": "Get the current directory of this Grasshopper script.",
        "icon": "icon",
        "nickname": "Dir",
        "outputs": [
          {
            "description": "Converts to collection of file paths. Ensures paths are absolute based on document location",
            "name": "D",
            "nickname": "D",
            "kind": "D"
          }
        ]
      },
      {
        "name": "Parent Directory",
        "description": "Get the parent of the directory.",
        "icon": "icon",
        "nickname": "Par",
        "inputs": [
          {
            "description": "Converts to collection of file paths. Ensures paths are absolute based on document location",
            "name": "D",
            "nickname": "D",
            "kind": "D"
          }
        ],
        "outputs": [
          {
            "description": "Converts to collection of file paths. Ensures paths are absolute based on document location",
            "name": "P",
            "nickname": "P",
            "kind": "P"
          }
        ]
      },
      {
        "name": "Separator",
        "description": "Get the separator char on this operating system.",
        "icon": "icon",
        "nickname": "Sep",
        "outputs": [
          {
            "description": "Converts to collection of text fragments",
            "name": "S",
            "nickname": "S",
            "kind": "S"
          }
        ]
      }
    ]
  }
}