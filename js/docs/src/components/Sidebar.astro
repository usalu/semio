---
import MobileMenuFooter from './MobileMenuFooter.astro';
import SidebarPersister from './SidebarPersister.astro';
import SidebarSublist from './SidebarSublist.astro';

const { sidebar } = Astro.locals.starlightRoute;
---

<!-- Original Starlight sidebar structure (hidden) -->
<div class="original-sidebar sl-hidden">
	<SidebarPersister>
		<SidebarSublist sublist={sidebar} />
	</SidebarPersister>
</div>

<div class="md:sl-hidden">
	<MobileMenuFooter />
</div>

<!-- Floating sidebar panel -->
<div id="sidebar-root" class="floating-sidebar-panel">
	<div class="sidebar-content">
		{sidebar && sidebar.length > 0 && (
			<nav class="tree-nav">
				{sidebar.map((item) => (
					<div class="tree-section">
						{item.items && item.items.length > 0 ? (
							<details class="tree-collapsible" open>
								<summary class="tree-section-label">
									<svg class="chevron" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
										<polyline points="6,9 12,15 18,9"></polyline>
									</svg>
									{item.label}
								</summary>
								<div class="tree-section-content">
									{item.items.map((subItem) => (
										<div class="tree-item">
											{subItem.link ? (
												<a href={subItem.link} class="tree-item-link">
													{subItem.label}
												</a>
											) : (
												<span class="tree-item-label">{subItem.label}</span>
											)}
										</div>
									))}
								</div>
							</details>
						) : (
							<div class="tree-item">
								{item.link ? (
									<a href={item.link} class="tree-item-link">
										{item.label}
									</a>
								) : (
									<span class="tree-item-label">{item.label}</span>
								)}
							</div>
						)}
					</div>
				))}
			</nav>
		)}
	</div>
</div>

<style>
	@layer starlight.core {
		/* Hide original sidebar */
		.original-sidebar {
			display: none !important;
		}

		#sidebar-root {
			position: fixed;
			top: 4rem;
			left: 1rem;
			bottom: 1rem;
			width: 280px;
			background: var(--sl-color-bg-sidebar);
			border: 1px solid var(--sl-color-gray-5);
			z-index: 20;
			overflow: auto;
		}

		.sidebar-content {
			padding: 0.25rem;
		}

		.tree-section {
			min-width: 0;
			overflow: hidden;
		}

		.tree-collapsible {
			min-width: 0;
			overflow: hidden;
		}

		.tree-section-label {
			display: flex;
			align-items: center;
			gap: 0.25rem;
			padding: 0.25rem 0.5rem;
			cursor: pointer;
			user-select: none;
			overflow: hidden;
			min-width: 0;
			font-size: var(--sl-text-xs);
			color: var(--sl-color-gray-2);
			text-transform: uppercase;
			font-weight: 600;
			letter-spacing: 0.05em;
		}

		.tree-section-label:hover {
			background: var(--sl-color-gray-6);
		}

		.chevron {
			flex-shrink: 0;
			transition: transform 0.2s;
		}

		.tree-collapsible:not([open]) .chevron {
			transform: rotate(-90deg);
		}

		.tree-section-content {
			padding-left: 0.5rem;
			min-width: 0;
			overflow: hidden;
			padding-bottom: 0.125rem;
		}

		.tree-item {
			min-width: 0;
			overflow: hidden;
		}

		.tree-item-link {
			display: block;
			padding: 0.125rem 0.25rem;
			font-size: var(--sl-text-xs);
			text-decoration: none;
			color: var(--sl-color-gray-3);
			overflow-wrap: anywhere;
			transition: color 0.2s;
			cursor: pointer;
			user-select: none;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}

		.tree-item-link:hover {
			background: var(--sl-color-gray-6);
			color: var(--sl-color-white);
		}

		.tree-item-label {
			display: block;
			font-size: var(--sl-text-xs);
			color: var(--sl-color-gray-3);
			font-weight: normal;
			padding: 0.125rem 0.25rem;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

		/* Hide floating panel on mobile */
		@media (max-width: 768px) {
			#sidebar-root {
				display: none !important;
			}
		}
	}
</style>
