---
import config from 'virtual:starlight/user-config';

import LanguageSelect from 'virtual:starlight/components/LanguageSelect';
import Search from 'virtual:starlight/components/Search';
import SiteTitle from 'virtual:starlight/components/SiteTitle';
import SocialIcons from 'virtual:starlight/components/SocialIcons';
import ThemeSelect from 'virtual:starlight/components/ThemeSelect';

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
	config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<!-- Original Header Structure -->
<div class="header">
	<div class="title-wrapper sl-flex">
		<SiteTitle />
	</div>
	<div class="sl-flex print:hidden">
		{shouldRenderSearch && <Search />}
	</div>
	<div class="sl-flex print:hidden right-group">
		<!-- Panel toggles -->
		<button id="sidebar-toggle" class="panel-toggle active" title="Toggle sidebar" type="button">
			<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
				<line x1="9" y1="3" x2="9" y2="21"/>
			</svg>
		</button>
		<button id="page-sidebar-toggle" class="panel-toggle active" title="Toggle page sidebar" type="button">
			<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
				<line x1="15" y1="3" x2="15" y2="21"/>
			</svg>
		</button>
		
		<div class="sl-flex social-icons">
			<SocialIcons />
		</div>
		<ThemeSelect />
		<LanguageSelect />
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const sidebarToggle = document.getElementById('sidebar-toggle');
		const pageSidebarToggle = document.getElementById('page-sidebar-toggle');
		
		if (sidebarToggle) {
			sidebarToggle.addEventListener('click', () => {
				const sidebarPanel = document.getElementById('sidebar-root');
				if (sidebarPanel) {
					const isVisible = !sidebarPanel.classList.contains('sl-hidden');
					if (isVisible) {
						sidebarPanel.classList.add('sl-hidden');
						sidebarPanel.style.display = 'none';
						sidebarToggle.classList.remove('active');
					} else {
						sidebarPanel.classList.remove('sl-hidden');
						sidebarPanel.style.display = 'block';
						sidebarToggle.classList.add('active');
					}
				}
			});
		}
		
		if (pageSidebarToggle) {
			pageSidebarToggle.addEventListener('click', () => {
				const pageSidebarPanel = document.getElementById('page-sidebar-root');
				if (pageSidebarPanel) {
					const isVisible = !pageSidebarPanel.classList.contains('sl-hidden');
					if (isVisible) {
						pageSidebarPanel.classList.add('sl-hidden');
						pageSidebarPanel.style.display = 'none';
						pageSidebarToggle.classList.remove('active');
					} else {
						pageSidebarPanel.classList.remove('sl-hidden');
						pageSidebarPanel.style.display = 'block';
						pageSidebarToggle.classList.add('active');
					}
				}
			});
		}
	});
</script>

<style>
	@layer starlight.core {
		.header {
			display: flex;
			gap: var(--sl-nav-gap);
			justify-content: space-between;
			align-items: center;
			height: 100%;
		}

		.title-wrapper {
			/* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
			overflow: clip;
			/* Avoid clipping focus ring around link inside title wrapper. */
			padding: 0.25rem;
			margin: -0.25rem;
			min-width: 0;
		}

		.right-group,
		.social-icons {
			gap: 1rem;
			align-items: center;
		}
		.social-icons::after {
			content: '';
			height: 2rem;
			border-inline-end: 1px solid var(--sl-color-gray-5);
		}

		/* Panel toggle styles */
		.panel-toggle {
			background: var(--sl-color-bg-sidebar);
			border: 1px solid var(--sl-color-gray-5);
			padding: 0.5rem;
			cursor: pointer;
			color: var(--sl-color-gray-3);
			transition: all 0.2s;
			display: flex;
			align-items: center;
			justify-content: center;
			width: 2rem;
			height: 2rem;
			margin-right: 0.5rem;
		}

		.panel-toggle:hover {
			color: var(--sl-color-white);
			background: var(--sl-color-gray-5);
		}

		.panel-toggle.active {
			color: var(--sl-color-white);
			background: var(--sl-color-accent);
			border-color: var(--sl-color-accent);
		}

		@media (min-width: 50rem) {
			:global(:root[data-has-sidebar]) {
				--__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
			}
			:global(:root:not([data-has-toc])) {
				--__toc-width: 0rem;
			}
			.header {
				--__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
				--__main-column-fr: calc(
					(
							100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
								(2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
								var(--sl-content-width)
						) / 2
				);
				display: grid;
				grid-template-columns:
        /* 1 (site title): runs up until the main content column's left edge or the width of the title, whichever is the largest  */
					minmax(
						calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
						auto
					)
					/* 2 (search box): all free space that is available. */
					1fr
					/* 3 (right items): use the space that these need. */
					auto;
				align-content: center;
			}
		}

		/* Show panel toggles on all screen sizes */
		.panel-toggle {
			display: flex;
		}
	}
</style>

<style>
	/* Custom logo size control */
	:global(.sl-site-title img) {
		width: 1.5rem !important;
		height: 1.5rem !important;
		max-width: 1.5rem !important;
		max-height: 1.5rem !important;
	}
	
	:global(.sl-site-title svg) {
		width: 1.5rem !important;
		height: 1.5rem !important;
		max-width: 1.5rem !important;
		max-height: 1.5rem !important;
	}
</style>


